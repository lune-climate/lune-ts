// =========================================================================================
//
// This file is AUTO-GENERATED by https://github.com/lune-climate/openapi-typescript-codegen
//
// In most cases you DON'T WANT TO MAKE MANUAL CHANGES to it â€“ they WILL BE OVERWRITTEN.
//
// =========================================================================================

/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { AdjustedDistance } from './AdjustedDistance.js'
import type { CalculatedRoute } from './CalculatedRoute.js'
import type { Distance } from './Distance.js'
import type { DistanceCalculationDetails } from './DistanceCalculationDetails.js'
import type { DistanceCalculationMethod } from './DistanceCalculationMethod.js'
import type { EmissionEstimate } from './EmissionEstimate.js'
import type { EmissionFactorWithGasEmissions } from './EmissionFactorWithGasEmissions.js'
import type { NullEnum } from './NullEnum.js'

export type BaseShippingLegEmissionEstimate = EmissionEstimate & {
    distance?: Distance
    adjustedDistance?: AdjustedDistance
    /**
     * The method we used to determine the shipping distance.
     *
     * `null` in case of logistics sites or when resolved_legs is set.
     *
     */
    distanceCalculationMethod: DistanceCalculationMethod | NullEnum
    /**
     * The shipping route.
     *
     * `null` in case of logistics sites and situations where the concept of
     * a route doesn't make sense or we're unable to return the route. That
     * includes the following situations at the moment:
     *
     * * Routes where source or destination is an address (or both are).
     * * Most land and inland waterways routes.
     * * The actual distance value was provided by the user.
     * * The emission estimate was created before 2023-09-22.
     *
     */
    route: CalculatedRoute | NullEnum
    emissionFactor: EmissionFactorWithGasEmissions
    /**
     * Summary of the methodology used to calculate emissions or any value which is a prerequisite.
     *
     * `imo_unavailable_container_ship_fallback`: the vessel IMO was not found, therefore a generic container ship emission factor has been used.
     * `flight_number_unavailable_fallback`: the flight number could not be found or the aircraft is currently not supported, therefore a generic plane method has been used.
     *
     */
    methodology: Array<
        | 'imo_unavailable_container_ship_fallback'
        | 'imo_unavailable_container_ship_trade_lane_fallback'
        | 'flight_number_unavailable_fallback'
    >
    /**
     * Information regarding why an alternative distance calculation method was used.
     * `null` in case several resolved legs are presented.
     *
     */
    distanceCalculationDetails: DistanceCalculationDetails | NullEnum
    /**
     * Details about the parameters and calculations used in the methodology for estimating emissions.
     */
    methodologyDetails?: {
        /**
         * Freight flight methodology details.
         */
        flight?: {
            /**
             * Name of the identified aircraft
             */
            aircraftName: string
            /**
             * Configuration of the aircraft
             */
            aircraftConfiguration: BaseShippingLegEmissionEstimate.aircraft_configuration
            /**
             * Total capacity of the aircraft.
             */
            aircraftCapacityTonnes: {
                passenger: number
                cargo: number
            }
            /**
             * Load factor for the provided flight. If the exact flight load factor is not
             * known a global average from IATA will be used.
             *
             */
            loadFactor: {
                passenger: number
                cargo: number
            }
            /**
             * Estimate of the fuel consumed by the flight, measured in tonnes.
             */
            flightFuelConsumedTonnes: number
            /**
             * Value of the Distance Adjustment Factor (DAF) as specified by the GLEC.
             */
            distanceAdjustmentFactor: number
            /**
             * Fraction (ranging from 0 to 1) of total flight leg emissions for which the shipment is responsible.
             *
             */
            emissionShare: number
        }
    }
}

export namespace BaseShippingLegEmissionEstimate {
    /**
     * Configuration of the aircraft
     */
    export enum aircraft_configuration {
        BELLY_FREIGHT = 'belly_freight',
        CARGO = 'cargo',
    }
}
