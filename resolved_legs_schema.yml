openapi: 3.0.1
info:
  title: Lune API Reference
  version: '1.0'
  contact:
    name: Lune Support
    email: support@lune.co
  termsOfService: https://lune.co/terms
  description: Full documentation can be found on https://docs.lune.co

servers:
  - url: https://api.lune.co/v1
    description: Lune's REST API

tags:
  - name: Orders
    description: Get a quote, create and fetch orders.
    x-lune-component: "Order"
  - name: Projects
    description: Get projects
    x-lune-component: "Project"
  - name: Bundles
    description: Get bundles.
    x-lune-component: "Bundle"
  - name: Emission estimates
    description: Estimate CO2 emissions (caused by shipping goods for example).
    x-lune-component: "EmissionEstimate"
  - name: Emission factors
    description: An emission factor is a coefficient which allows to convert activity data into GHG emissions.
    x-lune-component: "EmissionFactor"
  - name: Bundle selections
    description: Bundle selections define how an order is being split across a set of project bundles.
    x-lune-component: "BundleSelection"
  - name: Bundle portfolios
    description: A bundle portfolio is a preconfigured bundle selection managed by Lune.
    x-lune-component: "BundlePortfolio"
  - name: Accounts
    description: Get, create, update accounts.
    x-lune-component: "Account"
  - name: Client accounts
    description: Get, create, update client accounts.
    x-lune-component: "ClientAccount"
  - name: Sustainability page
    description: Share your impact via a public page.
    x-lune-component: "SustainabilityPage"
  - name: Analytics
    description: Get account analytics.
    x-lune-component: "Analytics"
  - name: Payments
    description: Get payments.
    x-lune-component: "Payment"
  - name: Webhooks
    description: A way to get notified about order state changes.
    x-lune-component: "Webhook"
  - name: Webhook request
    description: Webhook request response example.
    x-lune-component: "WebhookRequest"

paths:
  /accounts/me:
    get:
      summary: Get an account
      operationId: getAccount
      security:
        - BearerAuth: []
      tags:
        - Accounts
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Account'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '400':
          $ref: '#/components/responses/BadRequest'
  /accounts/client/me:
    get:
      summary: Get a client account
      operationId: getClientAccount
      security:
        - BearerAuth: []
      tags:
        - Client accounts
      responses:
        '200':
          description: OK
          x-lune-response-component: 'ClientAccount'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/client:
    post:
      summary: Create a client account
      operationId: createClientAccount
      security:
        - BearerAuth: []
      tags:
        - Client accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientAccountRequest'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'ClientAccount'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    get:
      summary: List client accounts
      operationId: listClientAccounts
      security:
        - BearerAuth: []
      tags:
        - Client accounts
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: name
          in: query
          description: |
            Filter accounts based on name (case insensitive).

            The value can appear at the beggining, middle or end on the actual account name.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_]{3,}$'
            example: 'Merchant_X'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientAccounts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/client/{id}:
    put:
      summary: Update a client account
      operationId: updateClientAccount
      security:
        - BearerAuth: []
      tags:
        - Client accounts
      parameters:
        - name: id
          in: path
          required: true
          description: The account's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'ClientAccount'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    patch:
      summary: Partially update a client account
      operationId: partialUpdateClientAccount
      security:
        - BearerAuth: []
      tags:
        - Client accounts
      parameters:
        - name: id
          in: path
          required: true
          description: The account's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialUpdateAccountRequest'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'ClientAccount'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/client/{id}/logo:
    post:
      summary: Update a client account logo
      operationId: updateClientAccountLogo
      security:
        - BearerAuth: []
      tags:
        - Client accounts
      parameters:
        - name: id
          in: path
          required: true
          description: The account's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadLogoRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadLogoResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts:
    post:
      summary: Create an account pair
      description: |
        Create a pair of live and test accounts. The accounts are linked via the `sibling_id` property.
      operationId: createAccountPair
      security:
        - BearerAuth: []
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPair'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    get:
      summary: List accounts
      operationId: listAccounts
      security:
        - BearerAuth: []
      tags:
        - Accounts
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: name
          in: query
          description:
            Filter accounts based on name (case insensitive).

            The value can appear at the beggining, middle or end on the actual account name.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_]{3,}$'
            example: 'Merchant_X'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccounts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/{id}:
    put:
      summary: Update an account
      description: |
        Update an account. Live accounts will replicate a name change to its sibling account. Test accounts name updates are disallowed (name property must match the current account name).
      operationId: updateAccount
      security:
        - BearerAuth: []
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          required: true
          description: The account's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Account'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    patch:
      summary: Partially update an account
      description: |
        Partially update an account. Live accounts will replicate a name change to its sibling account. Test accounts name updates are disallowed (name property must match the current account name).
      operationId: partialUpdateAccount
      security:
        - BearerAuth: []
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          required: true
          description: The account's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialUpdateAccountRequest'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Account'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/{id}/logo:
    post:
      summary: Update an account logo
      operationId: updateAccountLogo
      security:
        - BearerAuth: []
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          required: true
          description: The account's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadLogoRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadLogoResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /analytics/cumulative-per-bundle:
    get:
      summary: Get cumulative analytics
      operationId: getCumulativeAnalyticsPerBundle
      security:
        - BearerAuth: [ ]
      tags:
        - Analytics
      parameters:
        - name: from
          in: query
          description:
            The start date of the custom date range.

            Defaults to 30 days ago if not specified.
          schema:
            type: string
            format: date
            example: '2019-01-01'
        - name: through
          in: query
          description:
            The to (inclusive) date of the custom date range.

            Defaults to the current date if not specified.
          schema:
            type: string
            format: date
            example: '2020-01-31'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CumulativeBundleAnalytics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /analytics/metrics:
    get:
      summary: Get metrics
      operationId: getMetrics
      security:
        - BearerAuth: [ ]
      tags:
        - Analytics
      parameters:
        - name: from
          in: query
          description:
            The start date of the custom date range.

            Defaults to 30 days ago if not specified.
          schema:
            type: string
            format: date
            example: '2019-01-01'
        - name: through
          in: query
          description:
            The to (inclusive) date of the custom date range.

            Defaults to the current date if not specified.
          schema:
            type: string
            format: date
            example: '2020-01-31'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsMetrics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /analytics/aggregated-by-property:
    get:
      summary: Get aggregated analytics by property
      operationId: getAggregatedAnalyticsByProperty
      security:
        - BearerAuth: [ ]
      tags:
        - Analytics
      parameters:
        - name: from
          in: query
          description:
            The start date of the custom date range.

            Defaults to 30 days ago if not specified.
          schema:
            type: string
            format: date
            example: '2019-01-01'
        - name: through
          in: query
          description:
            The to (inclusive) date of the custom date range.

            Defaults to the current date if not specified.
          schema:
            type: string
            format: date
            example: '2020-01-31'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedAnalyticsByProperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /analytics/emission-calculations:
    get:
      summary: Get emission calculation metrics
      operationId: getEmissionCalculationMetrics
      security:
        - BearerAuth: [ ]
      tags:
        - Analytics
      parameters:
        - name: from
          in: query
          description:
            The start date of the custom date range.

            Defaults to 30 days ago if not specified.
          schema:
            type: string
            format: date
            example: '2019-01-01'
        - name: through
          in: query
          description:
            The to (inclusive) date of the custom date range.

            Defaults to the current date if not specified.
          schema:
            type: string
            format: date
            example: '2020-01-31'
        - name: interval
          in: query
          description:
            The time interval over which metrics should be aggregated.

            Defaults to day if not specified.
          schema:
            type: string
            enum:
              - day
              - month
        - name: all_accounts
          in: query
          description:
            When true, metrics will include data from all accounts in the organisation.
            When false, metrics will only include data from the API Key's default account.

            Defaults to false.
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionCalculationMetrics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /analytics/shipping/public/{account_id}:
    get:
      summary: Get analytics for shipping estimates
      operationId: getAnalyticsShippingEstimates
      tags:
        - Analytics
      parameters:
        - name: account_id
          in: path
          required: true
          description: The account identifier the analytics belongs to.
          schema:
            type: string
            example: ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz
        - name: from
          in: query
          description:
            The start date of the custom date range.

            Defaults to 30 days ago if not specified.
          schema:
            type: string
            format: date
            example: '2019-01-01'
        - name: through
          in: query
          description:
            The to (inclusive) date of the custom date range.

            Defaults to the current date if not specified.
          schema:
            type: string
            format: date
            example: '2020-01-31'
        - name: interval
          in: query
          description:
            The time interval over which metrics should be aggregated.

            Defaults to day if not specified.
          schema:
            type: string
            enum:
              - day
              - month
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsShippingEstimates'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /bundles:
    get:
      summary: List bundles
      operationId: listBundles
      security:
        - BearerAuth: []
      tags:
        - Bundles
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: recently_disabled
          in: query
          description:
            When `recently_disabled` is set to true, the response will also include bundles which have been disabled in the last 30 days.
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBundles'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /bundles/{id}:
    get:
      summary: Get a bundle
      operationId: getBundle
      security:
        - BearerAuth: []
      tags:
        - Bundles
      parameters:
        - name: id
          in: path
          required: true
          description: The bundle's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Bundle'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /projects:
    get:
      summary: List projects
      operationId: listProjects
      security:
        - BearerAuth: []
      tags:
        - Projects
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: recently_disabled
          in: query
          description:
            When `recently_disabled` is set to true, the response will also include projects which have been disabled in the last 30 days.
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Project'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjects'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /projects/{id}:
    get:
      summary: Get a project
      operationId: getProject
      security:
        - BearerAuth: []
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          required: true
          description: The project's unique identifier
          schema:
            type: string
            example: 1vE213P96LbXNap56NAqVoM7knOedQg4
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Project'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /projects/{id}/perimeter:
    get:
      summary: Get a project's perimeter
      operationId: getProjectPerimeter
      security:
        - BearerAuth: []
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          required: true
          description: The project's unique identifier
          schema:
            type: string
            example: 1vE213P96LbXNap56NAqVoM7knOedQg4
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Project perimeter'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectPerimeter'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /projects/by-slug/{slug}:
    get:
      summary: Get a project by slug
      operationId: getProjectBySlug
      security:
        - BearerAuth: []
      tags:
        - Projects
      parameters:
        - name: slug
          in: path
          required: true
          description: The project's unique slug
          schema:
            type: string
            example: 'alto-mayo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-mass:
    post:
      summary: Create an order by mass
      operationId: createOrderByMass
      security:
        - BearerAuth: []
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderByQuantityRequest'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Order'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderByQuantity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-value:
    post:
      summary: Create an order by value
      operationId: createOrderByValue
      security:
        - BearerAuth: []
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderByValueRequest'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Order'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderByValue'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-estimate:
    post:
      summary: Create an order by estimate id
      operationId: createOrderByEstimate
      security:
        - BearerAuth: []
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderByEstimateRequest'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Order'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderByEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders:
    get:
      summary: List orders
      description:  Returns the account's paginated orders in reverse order (most recent first).
      operationId: listOrders
      security:
        - BearerAuth: []
      tags:
        - Orders
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: offset_link_id
          in: query
          description: |
            Filter orders by offset_link_id.

            If offset_link_id is set, the response will only include orders belonging to the particular offset link.
          schema:
            type: string
            example: ke56XR3wK72raAe6ZPyEDQzgWldPBO41
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrders'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/{id}:
    get:
      summary: Get an order
      operationId: getOrder
      security:
        - BearerAuth: []
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          description: The order's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Order'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/{id}/certificate:
    get:
      summary: Get a carbon offset certificate
      operationId: getOrderCertificate
      security:
        - BearerAuth: []
        - AccessToken: []
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          description: The order's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-idempotency-key/{idempotency_key}:
    get:
      summary: Get an order by idempotency key
      operationId: getOrderByIdempotencyKey
      security:
        - BearerAuth: []
      tags:
        - Orders
      parameters:
        - name: idempotency_key
          in: path
          required: true
          description: |
            The order's idempotency key.

            Order idempotency keys must be unique per account.
          schema:
            type: string
            example: 'sg5knd2'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Order'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-mass/quote:
    post:
      summary: Calculate an order quote by mass
      description: |
        This endpoint does not create an order.

        It processes the order as if it were placed, returning estimated cost and bundles allocations.
      operationId: getOrderQuoteByMass
      security:
        - BearerAuth: []
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderQuoteByQuantityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderQuoteByQuantity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-value/quote:
    post:
      summary: Calculate an order quote by value
      description: |
        This endpoint does not create an order.

        It processes the order as if it were placed, returning estimated cost and bundles allocations.
      operationId: getOrderQuoteByValue
      security:
        - BearerAuth: []
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderQuoteByValueRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderQuoteByValue'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /bundle-selections:
    get:
      summary: Get an account's bundle selection
      operationId: getBundleSelection
      security:
        - BearerAuth: []
      tags:
        - Bundle selections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleSelection'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      summary: Update an account's bundle selection
      operationId: updateBundleSelection
      security:
        - BearerAuth: []
      tags:
        - Bundle selections
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BundleSelectionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleSelection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /bundle-portfolios:
    get:
      summary: List all bundle portfolios
      operationId: listAllBundlePortfolios
      security:
        - BearerAuth: []
      tags:
        - Bundle portfolios
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BundlePortfolio'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      summary: Update an account's bundle portfolio
      operationId: updateBundlePortfolio
      security:
        - BearerAuth: []
      tags:
        - Bundle portfolios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetBundlePortfolioRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundlePortfolio'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /estimates/electricity:
    post:
      summary: Create an electricity emission estimate
      description: Estimate emissions produced by electricity consumption.
      operationId: createElectricityEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectricityEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectricityEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/electricity/{id}:
    get:
      summary: Get an electricity emission estimate
      operationId: getElectricityEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectricityEmissionEstimate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFoundWithErrors'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    put:
      summary: Update an electricity emission estimate
      description: Estimate emissions produced by electricity consumption.
      operationId: updateElectricityEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectricityEstimateRequest'
      responses:
        '200':
          description: |
            Estimation updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectricityEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/flight:
    post:
      summary: Create a flight emission estimate
      description: Estimate emissions produced by passengers in a commercial airflight.
      operationId: createFlightEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/passenger-transportation:
    post:
      summary: Create a passenger transportation emission estimate
      description: Estimate emissions produced by passenger transportation, for instance commercial flight, rail, road.
      operationId: createPassengerTransportationEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerTransportationEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerTransportationEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/shipping/all:
    get:
      summary: List all shipping estimates
      description: |
        Returns single and multi-leg shipping estimates paginated in reverse order.
      operationId: listAllShipingEstimates
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: is_shipment
          in: query
          description: |
            When true, the emission estimate refers to an actual shipment of goods.

            This property exists to distinguish booking quotes or forecasts from actual shipments where goods are moved.

            By default, all estimates are returned.
          schema:
            type: boolean
            example: true
        - name: from
          in: query
          description: |
            When set, the result includes estimates created at or after the timestamp.

            Both `from` and `through` are either provided or missing.
          schema:
            type: string
            format: date-time
            example: '2019-01-01T12:30:00Z'
        - name: through
          in: query
          description: |
            When set, the result includes estimates created at or before the timestamp.

            Both `from` and `through` are either provided or missing.
          schema:
            type: string
            format: date-time
            example: '2020-01-31T10:30:00Z'
        - $ref: '#/components/parameters/EstimateMassUnit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnyShippingEmissionEstimates'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/shipping:
    post:
      summary: Create a shipping emission estimate (single)
      operationId: createShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - $ref: '#/components/parameters/EstimateMassUnit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleShippingEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/shipping/{id}:
    get:
      summary: Get a shipping emission estimate (single)
      operationId: getShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
        - $ref: '#/components/parameters/EstimateMassUnit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleShippingEmissionEstimate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFoundWithErrors'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    put:
      summary: Update a shipping emission estimate (single)
      operationId: updateShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
        - $ref: '#/components/parameters/EstimateMassUnit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleShippingEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/shipping/{id}/annotations:
    patch:
      summary: Update a shipping emission estimate's annotations
      description: |
        This method allows updating a selection of estimate annotations without going through
        a full estimate update (with all the necessary inputs).

        Only properties included in the input data are updated.
      operationId: updateShippingEstimateAnnotations
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShippingEstimateAnnotationsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleShippingEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /estimates/shipping/multi-leg:
    post:
      summary: Create a shipping emission estimate (multi-leg)
      description: Each leg can be fulfilled by a different method, eg a truck, a plane or other options.
      operationId: createMultiLegShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - $ref: '#/components/parameters/EstimateMassUnit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiLegShippingEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiLegShippingEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/shipping/multi-leg/{id}:
    get:
      summary: Get a shipping emission estimate (multi-leg)
      operationId: getMultiLegShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
        - $ref: '#/components/parameters/EstimateMassUnit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiLegShippingEmissionEstimate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFoundWithErrors'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    put:
      summary: Update a shipping emission estimate (multi-leg)
      operationId: updateMultiLegShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
        - $ref: '#/components/parameters/EstimateMassUnit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiLegShippingEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiLegShippingEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/shipping/multi-leg/{id}/annotations:
    patch:
      summary: Update a multi-leg shipping emission estimate's annotations
      description: |
        This method allows updating a selection of estimate annotations without going through
        a full estimate update (with all the necessary inputs).

        Only properties included in the input data are updated.
      operationId: updateMultiLegShippingEstimateAnnotations
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShippingEstimateAnnotationsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiLegShippingEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /estimates/transactions:
    post:
      summary: Create a transaction emission estimate (single)
      operationId: createTransactionEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionEmissionEstimate'
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/transactions/batch:
    post:
      summary: Create a transaction emission estimate (batch)
      description: |
        Perform multiple transaction emissions estimate in one request.

        Each estimate is handled individually.

        The response contains estimates or errors in the same orders as the request.
      operationId: createBatchTransactionEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchTransactionEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTransactionEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/transactions/by-idempotency-key/{idempotency_key}:
    get:
      summary: Get a transaction emission estimate by idempotency key
      operationId: getTransactionEstimateByIdempotencyKey
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: idempotency_key
          in: path
          required: true
          description: |
            The order's idempotency key.

            Idempotency keys must be unique per account.
          schema:
            type: string
            example: 'sg5knd2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionEmissionEstimate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFoundWithErrors'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/transactions/{id}/annotations:
    patch:
      summary: Update a transaction emission estimate's annotations
      description: |
        This method allows updating a selection of estimate annotations without going through
        a full estimate update (with all the necessary inputs).

        Only properties included in the input data are updated.
      operationId: partialUpdateTransactionsEstimateAnnotations
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransactionEstimateAnnotationsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /estimates/transactions/{id}:
    get:
      summary: Get a transaction emission estimate
      operationId: getTransactionEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionEmissionEstimate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFoundWithErrors'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    put:
      summary: Update a transaction emission estimate
      operationId: updateTransactionEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionEmissionEstimate'
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/company:
    post:
      summary: Create a company emission estimate
      description: |
        Estimate emissions produced by a company. This includes office-related emissions,
        employee transportation, food, drinks, electronic equipment and computing/networking
        operations.

        The result is an estimate of a year-worth of company emissions.
      operationId: createCompanyEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/company/{id}:
    get:
      summary: Get a company emission estimate
      operationId: getCompanyEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEmissionEstimate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFoundWithErrors'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    put:
      summary: Update a company emissions estimate
      operationId: updateCompanyEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/emission-factor:
    post:
      summary: Create an estimate using a specific emission factor
      tags:
        - Emission estimates
      operationId: createEmissionFactorEstimate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionFactorEstimateRequest'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'EmissionFactor'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionFactorEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /emission-factors:
    get:
      tags:
        - Emission factors
      summary: List emission factors
      operationId: listEmissionFactors
      parameters:
        - $ref: '#/components/parameters/LimitPagination'
        - $ref: '#/components/parameters/AfterPagination'
        - name: name
          in: query
          description: |
            Search for emission factors (case insensitive). A combination of semantic and keyword search
            is used to provide the most relevant results.
          schema:
            type: string
            example: pipe
          allowReserved: true
        - name: source
          in: query
          description: |
            Filter emission factors based on source.
            When omitted, all sources are returned.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EmissionFactorSource'
            example: ['GLEC']
        - name: publication_year
          in: query
          description: Filter emission factors based on the publication year.
          schema:
            type: array
            items:
              type: number
              example: 2021
        - name: region
          in: query
          description: |
            Filter emission factors based on region (case insensitive).
            The value must be an exact match.
            When omitted, all regions are returned.

            Countries are included in regions but there are also broader geographic regions like Europe or Asia.
          schema:
            type: array
            items:
              type: string
              example: Europe
          allowReserved: true
        - name: unit
          in: query
          description: |
            Filter emission factors based on the logical unit.
            When omitted, all units are returned.
          schema:
            $ref: '#/components/schemas/EmissionFactorLogicalUnit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmissionFactors'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /emission-factors/regions:
    get:
      tags:
        - Emission factors
      summary: List all emission factor regions
      description: You may use emission factor regions as a filter when you list emission factors.
      operationId: listAllEmissionFactorRegions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionFactorRegions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /webhooks:
    get:
      tags:
        - Webhooks
      summary: List all webhooks
      operationId: listAllWebhooks
      security:
        - BearerAuth: []
      parameters:
        - name: account_id
          in: query
          required: false
          description: |
            Filter by account identifiers: return webhooks which push events for the given account identifiers.
          schema:
            type: array
            items:
              type: string
              example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
              description: An account's unique identifier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      tags:
        - Webhooks
      summary: Create a webhook
      operationId: createWebhook
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookFullSecret'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /webhooks/{id}:
    get:
      tags:
        - Webhooks
      summary: Get a webhook
      operationId: getWebhook
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The webhooks's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      tags:
        - Webhooks
      summary: Update a webhook
      operationId: updateWebhook
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The webhooks's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    delete:
      tags:
        - Webhooks
      summary: Delete a webhook
      operationId: deleteWebhook
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The webhooks's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /webhooks/{id}/rotate-secret:
    put:
      tags:
        - Webhooks
      summary: Rotate a webhook secret
      description: |
        The existing secret will be invalidated immediately and subsequent webhook payloads will be
        accompanied by HMACs using the new secret.
      operationId: rotateWebhookSecret
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The webhooks's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookFullSecret'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /WebhookRequest:
    post:
      tags:
        - Webhook request
      summary: Webhook request
      operationId: webhookRequest
      description: |
        The endpoint describes the request that you will receive in your webhook receiver and the responses the Lune webhook infrastructure expects.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
      responses:
        '200':
          description: The events have been successfully handled. Any status code of the `2xx` format has the same behaviour. Any header or body are ignored by Lune.
  /sustainability-pages:
    post:
      tags:
        - Sustainability page
      summary: Create a sustainability page
      operationId: createSustainabilityPage
      description:
        Create a public https://sustainability.lune.co/<slug> page to communicate your climate impact efforts.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SustainabilityPageRequest'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'SustainabilityPage'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SustainabilityPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      tags:
        - Sustainability page
      summary: Update a sustainability page
      operationId: updateSustainabilityPage
      description:
        Update the format, layout and status of your public https://sustainability.lune.co/<slug> page.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SustainabilityPageRequest'
      responses:
        '200':
          x-lune-response-component: 'SustainabilityPage'
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SustainabilityPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /sustainability-pages/current-account:
    get:
      tags:
        - Sustainability page
      summary: Get the current account's sustainability page
      operationId: getSustainabilityPage
      description:
          Get the configuration of the current account's sustainability page.
      security:
        - BearerAuth: []
      responses:
          '200':
            x-lune-response-component: 'SustainabilityPage'
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SustainabilityPage'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
  /sustainability-pages/public/{type}/{slug}:
    get:
      tags:
        - Sustainability page
      summary: Get a sustainability page
      operationId: getPublicSustainabilityPage
      description:
        Get the current account's public sustainability summary info.
      parameters:
        - name: type
          in: path
          required: true
          description: The type of the sustainability page.
          schema:
            $ref: '#/components/schemas/AccountType'
        - name: slug
          in: path
          required: true
          description: The slug of the sustainability page.
          schema:
            type: string
            example: 'acme'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSustainabilityPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /payments/by-temporary-id/{temporary_id}:
    get:
      summary: Get a payment by a temporary id
      description: |
        Get a specific payment by a temporary id.

        The temporary id will remain valid for 15min from the payment's creation after which the endpoint will return a 404.
      operationId: getPaymentByTemporaryId
      tags:
        - Payments
      parameters:
        - name: temporary_id
          in: path
          required: true
          description: The payment's temporary id
          schema:
            type: string
            format: uuid
            example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'
      responses:
        '200':
          description: OK
          x-lune-response-component: 'Payment'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: Authorization Bearer API Key (see <a href="#section/Authentication">Authentication</a>)
    AccessToken:
      type: apiKey
      in: query
      name: access_token
      description: |
        An API key used to access a resource that accepts it in the URL.

        Note: Lune API keys are not URL-safe, which means that they can't be included in URLs directly.
        They need to be percent-encoded using a function like JavaScript's [`encodeURIComponent()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent) or
        Python's [`urllib.parse.quote()`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote).
  parameters:
    LimitPagination:
      name: limit
      in: query
      required: false
      description: |
        Maximum number of resources to return, between 1 and 100.
      schema:
        type: string
        pattern: '^\d+$'
        default: '10'
        example: '50'
    AfterPagination:
      name: after
      in: query
      required: false
      description: |
        A cursor for use in pagination.

        The cursor that points to the starting item of the next page of results. If not provided, the first page of results is returned.
      schema:
        type: string
        example: 0vE213P96LbXNap56NAqVoM7knOedQg4
    EstimateMassUnit:
      name: estimate_mass_unit
      in: query
      required: false
      description: |
        By default estimate mass units are returned in tonnes.

        Estimate mass units in responses are converted to `estimate_mass_unit` when set.
      schema:
        $ref: '#/components/schemas/MassUnit'
  responses:
    NotFound:
      description: The specified resource was not found
    NotFoundWithErrors:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description: The request is invalid. Parameters may be missing or are invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: The API Key is missing or is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    TooManyRequests:
      description: Too many requests have been made in a short period of time
    Forbidden:
      description: The API Key is not authorized to perform the operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Conflict:
      description: The request could not be completed due to a conflict with the current state of the target resource or resources
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UnsupportedMediaType:
      description: The payload format is in an unsupported format.
    ServiceUnavailable:
      description: The service is temporarily unavailable. You may retry.
    PayloadTooLarge:
      description: The request is larger than 100kB.
  schemas:
    ElectricityConsumption:
      type: object
      required:
        - amount
        - unit
      properties:
        amount:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '40.501'
        unit:
          type: string
          enum:
            - kWh
            - MWh
            - GWh
          example: 'MWh'
          description: Unit, `kWh` for kilowatt-hours, `MWh` for megawatt-hours, `GWh` for gigawatt-hours
    Mass:
      type: object
      required:
        - amount
        - unit
      properties:
        amount:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '40.501'
        unit:
          $ref: '#/components/schemas/MassUnit'
    QuantityTrunc:
      description: Selects to which precision to truncate quantities specific to carbon offsetting.
      example: 't'
      allOf:
        - $ref: '#/components/schemas/MassUnit'
    MassUnit:
      type: string
      description: Unit, `t` for tonne, `kg` for kilogram, `g` for gram
      enum:
        - g
        - kg
        - t
      example: 't'
    Distance:
      type: object
      required:
        - amount
        - unit
      properties:
        amount:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '40.501'
        unit:
          type: string
          enum:
            - km
            - mi
            - nm
          example: 'km'
          description: Unit, `km` for kilometers, `mi` for miles
    AdjustedDistance:
      description: |
        Distance estimation after distance adjustment factors have been applied.
        Adjusted factors are decided by GLEC and are added to make distances more realistic.
      type: object
      required:
        - amount
        - unit
      properties:
        amount:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '40.501'
        unit:
          type: string
          enum:
            - km
            - mi
            - nm
          example: 'km'
    DistanceCalculationMethod:
      description: |
        * `great_circle_distance` – Great-circle distance (as the crow flies)
        * `great_circle_distance_x2` – Great-circle distance multiplied by two
        * `sea_distance_algorithm` – our algorithm using known distances between ports
        * `mapbox` – we used the Mapbox Matrix API
        * `user_input` – the distance was provided to us directly
        * `osrm` – we used Open Source Routing Machine, the OpenStreetMap Data Routing Engine
        * `vessel_tracking` – we used the AIS data to track the vessel's route
      type: string
      enum:
        - great_circle_distance
        - great_circle_distance_x2
        - sea_distance_algorithm
        - mapbox
        - user_input
        - osrm
        - vessel_tracking
    DistanceCalculationDetails:
      type: object
      required:
        - vessel_tracking
      properties:
        vessel_tracking:
          oneOf:
            - type: object
              x-lune-name: Vessel tracking details
              required:
                - message
              properties:
                message:
                  type: string
                  example: "AIS tracking is only available for departures within the past 3 months."
            - type: object
              x-lune-name: Vessel tracking adjustments
              required:
                - adjustments
              properties:
                adjustments:
                  type: array
                  items:
                    type: string
                    example: "The source location has been snapped to the closest port (142.67km away)."
            - $ref: '#/components/schemas/NullEnum'
    ConvertedShipment:
      type: object
      required:
        - amount
        - unit
      properties:
        amount:
          type: string
        unit:
          oneOf:
            - $ref: '#/components/schemas/MassUnit'
            - x-lune-name: Containers
              type: string
              enum:
                - TEU
    ShipmentConversionMethod:
      description: |
        * `user_provided_cargo_type` – `cargo_type` was provided and we used it to perform
          the conversion
        * `average_cargo_type` – `cargo_type` was not provided and we assumed `average` when
          converting
      type: string
      enum:
        - user_provided_cargo_type
        - average_cargo_type
    Area:
      type: object
      required:
        - amount
        - unit
      properties:
        amount:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '40.501'
        unit:
          type: string
          enum:
            - square_meters
            - square_feet
          example: 'square_meters'
    ErrorResponse:
      description: |
        An error response containing the error details.

        The `error` property provides information about the type of error that occurred.
        Use this property for error handling.

        The `errors` array is present for backwards compatibility purposes. It always
        contains a single error element which is the same seen in the `error` property.
      type: object
      required:
        - errors
        - error
      properties:
        errors:
          type: array
          description: An array containing errors
          items:
            $ref: '#/components/schemas/Error'
        error:
          $ref: '#/components/schemas/Error'
    Error:
      type: object
      description: Individual error information
      required:
        - error_code
        - message
      properties:
        error_code:
          type: string
          description: Immutable string representing a specific error.
          example: account_suspended
          enum:
            - account_suspended
            - bundle_selection_ratios_invalid
            - bundle_selection_bundle_invalid
            - order_idempotency_already_exists
            - order_quantity_invalid
            - order_value_invalid
            - bundle_id_invalid
            - id_invalid
            - test_account_name_update_disallowed
            - validation_error
            - bundle_selection_ratios_invalid_format
            - address_not_found
            - port_not_found
            - locode_not_found
            - airport_invalid
            - webhook_limit_reached
            - time_range_invalid
            - exchange_rate_not_found
            - live_account_required
            - unauthorised
            - estimate_not_found
            - estimate_order_already_placed
            - sustainability_page_slug_not_unique
            - sustainability_page_exists
            - pagination_limit_invalid
            - unsupported_image_format
            - source_location_code_invalid
            - destination_location_code_invalid
            - emission_factor_id_invalid
            - emission_factor_unit_mismatch
            - emission_factor_gated
            - account_scope_incorrect
            - service_unavailable
            - handle_not_unique
            - estimate_idempotency_already_exists
        message:
          type: string
          description: |
              Human readable error message.

              This value can contain some extra information about the error in
              human-readable form. Not suitable for programmatic consumption, the format
              is not guaranteed to be stable.
    OrderQuoteByQuantityRequest:
      type: object
      oneOf:
          - $ref: '#/components/schemas/OrderQuoteByQuantityWithBundlePercentage'
          - $ref: '#/components/schemas/OrderQuoteByQuantityWithBundleMass'
      example:
        mass:
          amount: '12.07'
          unit: 'kg'
    OrderQuoteByQuantityWithBundlePercentage:
      type: object
      x-lune-oneof-default: true
      description: Order by Quantity details
      required:
        - mass
      properties:
        mass:
          description: Mass of CO2 offsets to purchase
          # We use allOf to make the description field not be ignored.
          # See: https://swagger.io/docs/specification/using-ref/ section "$ref and Sibling Elements"
          allOf:
            - $ref: '#/components/schemas/Mass'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
      example:
        mass:
          amount: '12.07'
          unit: 'kg'
    OrderQuoteByQuantityWithBundleMass:
      type: object
      description: Order by Quantity details
      required:
        - bundle_masses
      properties:
        bundle_masses:
          type: array
          description: |
            An array of `{ bundle_id, mass }` objects.

            Populate the array to purchase carbon credits, belonging to multiple bundles, by quantity, eg 20 tCO₂.
          items:
            $ref: '#/components/schemas/BundleMass'
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
    CreateOrderByQuantityRequest:
      type: object
      oneOf:
          - $ref: '#/components/schemas/CreateOrderByQuantityWithBundlePercentage'
          - $ref: '#/components/schemas/CreateOrderByQuantityWithBundleMass'
      example:
        mass:
          amount: '259.11'
          unit: 'kg'
    CreateOrderByQuantityWithBundlePercentage:
      type: object
      x-lune-oneof-default: true
      description: Order by Quantity details
      required:
        - mass
      properties:
        mass:
          description: Mass of CO2 offsets to purchase
          # We use allOf to make the description field not be ignored.
          # See: https://swagger.io/docs/specification/using-ref/ section "$ref and Sibling Elements"
          allOf:
            - $ref: '#/components/schemas/Mass'
        idempotency_key:
          type: string
          maxLength: 100
          example: 5bd808a954e
          description: |
            Account-unique identifier provided by the client.

            `idempotency_key` has two purposes:
            1. Clients can safely retry order requests without accidentally performing the same operation twice. The current state of the original order is returned.
            2. Clients can use `idempotency_key` to reconcile orders with other entities on their system.
        bundle_selection:
          description: |
            Bundle selection to be used for the order.
            For the order, this property overrides the account's bundle selection.
          $ref: '#/components/schemas/BundleSelectionRequest'
        metadata:
          $ref: '#/components/schemas/Metadata'
          default: {}
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
    CreateOrderByQuantityWithBundleMass:
      type: object
      description: Order by Quantity details
      required:
        - bundle_masses
      properties:
        bundle_masses:
          type: array
          description: |
            An array of `{ bundle_id, mass }` objects.

            Populate the array to purchase carbon credits, belonging to multiple bundles, by quantity, eg 20 tCO₂.
          items:
            $ref: '#/components/schemas/BundleMass'
        idempotency_key:
          type: string
          maxLength: 100
          example: 5bd808a954e
          description: |
            Account-unique identifier provided by the client.

            `idempotency_key` has two purposes:
            1. Clients can safely retry order requests without accidentally performing the same operation twice. The current state of the original order is returned.
            2. Clients can use `idempotency_key` to reconcile orders with other entities on their system.
        metadata:
          $ref: '#/components/schemas/Metadata'
          default: {}
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
    OrderQuoteByValueRequest:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7700.00'
          description: |
            Maximum price of CO2 offsets to purchase (in the account's currency).

            `value` must not be lower than the currency's minimum unit.
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
      example:
        value: '770.30'
    CreateOrderByValueRequest:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7700.00'
          description: |
            Maximum price of CO2 offsets to purchase (in the account's currency).

            `value` must not be lower than the currency's minimum unit.
        idempotency_key:
          type: string
          maxLength: 100
          example: 5bd808a954e
          description: |
            Account-unique identifier provided by the client.

            `idempotency_key` has two purposes:
            1. Clients can safely retry order requests without accidentally performing the same operation twice. The current state of the original order is returned.
            2. Clients can use `idempotency_key` to reconcile orders with other entities on their system.
        bundle_selection:
          description: |
            Bundle selection to be used for the order.
            For the order, this property overrides the account's bundle selection.
          $ref: '#/components/schemas/BundleSelectionRequest'
        metadata:
          $ref: '#/components/schemas/Metadata'
          default: {}
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
      example:
        value: '0.54'
    CreateOrderByEstimateRequest:
      type: object
      required:
        - estimate_id
      properties:
        estimate_id:
          type: string
          description: The emission calculation unique identifier
          example: '90ng23MKvLqbkpMwMw7yMBD4wJQrV6O6'
        idempotency_key:
          type: string
          maxLength: 100
          example: 5bd808a954e
          description: |
            Account-unique identifier provided by the client.

            `idempotency_key` has two purposes:
            1. Clients can safely retry order requests without accidentally performing the same operation twice. The current state of the original order is returned.
            2. Clients can use `idempotency_key` to reconcile orders with other entities on their system.
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        metadata:
          $ref: '#/components/schemas/Metadata'
          default: {}
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
    BundleSelectionRequest:
      type: array
      description: |
        Bundle selection percentages.

        The sum of all percentages must equal 100.

        If not specified, the preconfigured allocation ratios are going to be used.

        If, for each selection, `percentage` is not provided, the selection is divided equally (best effort) between bundles. `percentage` must be provided for all or none of the bundles.
      items:
        $ref: '#/components/schemas/BundlePercentageRequest'
      example:
        - bundle_id: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          percentage: 34
        - bundle_id: 'VndoQ0PZjGMzvYOZGwqy6kbgN1eOJx9B'
          percentage: 66
    BundlePercentageRequest:
      type: object
      description: Maps a bundle id to an allocation ratio
      required:
        - bundle_id
      properties:
        bundle_id:
          type: string
          example: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          description: The bundle's unique identifier
        percentage:
          oneOf:
            - type: integer
              x-lune-name: Selection percentage as integer
              example: 43
              description: Selection percentage
            - type: string
              example: '43.21'
              pattern: '^[0-9]+(\.\d{1,2})?$'
              x-lune-name: Selection percentage in decimals
              description: Selection percentage in decimals
    BundleSelection:
      type: array
      description: |
        A Bundle Selection represents an account's default project bundle ratios that are used when an order is placed without specifying project bundles.

        An account initial project bundle selection is
        * Conserving forests in Asia - 95%
        * Ocean Carbon Removal - 5%
      items:
        $ref: '#/components/schemas/BundlePercentage'
      example:
        - bundle_id: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          percentage: 34
        - bundle_id: 'VndoQ0PZjGMzvYOZGwqy6kbgN1eOJx9B'
          percentage: 66
    BundlePercentage:
      type: object
      description: Maps a bundle's unique identifier to an allocation ratio
      required:
        - bundle_id
        - percentage
      properties:
        bundle_id:
          type: string
          example: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          description: The bundle's unique identifier
        percentage:
          oneOf:
            - type: integer
              example: 43
              description: Selection percentage
              x-lune-name: Selection percentage as integer
            - type: string
              example: "43.21"
              pattern: '^[0-9]+(\.\d{1,2})?$'
              description: Selection percentage in decimals
              x-lune-name: Selection percentage in decimals
    BundleMass:
      type: object
      description: Maps a bundle's unique identifier to a mass
      required:
        - bundle_id
        - mass
      properties:
        bundle_id:
          type: string
          example: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          description: The bundle's unique identifier
        mass:
          $ref: '#/components/schemas/Mass'
    SetBundlePortfolioRequest:
      type: object
      required:
        - bundle_portfolio_id
      properties:
        bundle_portfolio_id:
          type: string
          example: 'j85vWbLVZNlOayV94P8AM1K29RgJq4xX'
    BundlePortfolio:
      type: object
      description: |
        A curated group of predefined project bundles., e.g., Oxford Offsetting Principles.

        Project bundles for a particular Bundle portfolio may change over time.
      required:
        - id
        - identifier
        - label
        - bundle_selection
      properties:
        id:
          type: string
          description: Bundle portfolio unique identifier.
          example: 'A7hPO9C01RnzPkYxJgAHxq112roXlWO5'
        identifier:
          type: string
          description: Identifier of the bundle portfolio.
          example: 'oxford-offsetting-principles'
        label:
          type: string
          description: Human readable name of the bundle portfolio.
          example: 'Oxford Offseting Principles'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelection'
    OrderBase:
      type: object
      description: Order object
      required:
        - id
        - idempotency_key
        - type
        - status
        - currency
        - offset_cost
        - total_cost
        - commission
        - quantity
        - created_at
        - bundles
        - projects
        - certificate
        - public_certificate_url
        - metadata
        - offset_link_id
        - email
        - payment_method
      properties:
        id:
          type: string
          description: The order's unique identifier
          example: va1BER4JZqnzPkYxJgALg0GeQDoXlWO5
        idempotency_key:
          type: string
          maxLength: 100
          example: 5bd808a954e
          description: |
            Account-unique identifier provided by the client.

            `idempotency_key` has two purposes:
            1. Clients can safely retry order requests without accidentally performing the same operation twice. The current state of the original order is returned.
            2. Clients can use `idempotency_key` to reconcile orders with other entities on their system.
          nullable: true
          default: null
        type:
          type: string
          description: Identifies whether the order has been placed by quantity (kg CO2) or value (monetary amount)
          example: quantity
          enum:
            - quantity
            - value
        status:
          type: string
          description: Order status
          example: complete
          enum:
            - received
            - placed
            - paid
            - retiring
            - cancelled
            - complete
            - failed
        currency:
          type: string
          description: Order currency code
          example: 'GBP'
        offset_cost:
          type: string
          description: |
            The net offset cost being purchased. May be lower than `requested_value`.

            This property is set when bundles are assigned to the order.
            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7176.00'
          nullable: true
        total_cost:
          type: string
          description: |
            The total cost for the order inclusive of fees.

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7696.00'
          nullable: true
        commission:
          type: string
          description: |
            Lune's fee.

            This property is set when bundles are assigned to the order.
            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '520.00'
          nullable: true
        quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1040'
          description: Quantity of CO2 offsets purchased in tonnes.
          nullable: true
        payment_method:
          description: How the order will be paid.

            When `card`, Lune will attempt to charge the card and pay this order.
            When `invoice`, Lune will email an invoice with payment instructions.
          type: string
          enum:
            - invoice
            - card
            - null
            # We need null to be an explicit enum member here in order for our response validation
            # middleware to work correctly. This is *in addition to* "nullable: true" below (which is
            # needed too).
          nullable: true
        created_at:
          type: string
          format: date-time
          description: Order creation timestamp
        bundles:
          type: array
          description: |
            bundles are set when the order's status is `placed`, `paid`, `retiring` or `complete`.

            The bundles associated with the order including their relative quantity and cost breakdown.
          items:
            $ref: '#/components/schemas/OrderBundle'
          nullable: true
        projects:
          type: array
          description: |
            Projects are set when the order's status is `retiring` or `complete`.

            The projects associated with the order including their relative quantity and cost breakdown.

            Orders are placed against bundles, not projects. Projects in a bundle may change based on supply.

            This property is set as soon as we can guarantee project supply.

          items:
            $ref: '#/components/schemas/OrderProject'
          example:
            - quantity: '600'
              unit_price: '6.90'
              offset_cost: '4140.00'
              project_id: 'gMbvJoOaX54V1wpNaRY8dWDGQ7m239Bx'
              project_name: 'Madre De Dios'
              project_type: 'Forest Conservation'
              project_slug: 'madre-de-dios'
            - quantity: '440'
              unit_price: '6.90'
              offset_cost: '3036.00'
              project_id: 'xe1BEV2VZqnzPkYxJgALg0GeQDoXlWO5'
              project_name: 'Alto Mayo'
              project_type: 'Forest Conservation'
              project_slug: 'alto-mayo'
          nullable: true
        certificate:
          type: string
          description: |
            Carbon credits PDF certificate URL.

            This property is set when an order has state 'complete'

            The property is set (and the certificate is available) regardless of the
            Sustainability page configuration.

            The URL requires API authentication and cannot be accessed anonymously.
          example: 'https://api.lune.co/v1/orders/08QD7GPaBx5b6Y60ndAONXLvrZljRE2e/certificate'
          nullable: true
        public_certificate_url:
          type: string
          description: |
            The Carbon credits certificate public URL.

            Once the Sustainability page of the associated account is enabled and configured to include the
            certificate section, and the order is set to 'complete', this URL will link to the publicly accessible certificate.

          example: 'https://sustainability.lune.co/account?certificate=1'
          nullable: true
        metadata:
          $ref: '#/components/schemas/Metadata'
        offset_link_id:
          type: string
          description: The offset link identifier, if the order was placed through an offset link
          example: 'UwjfkXjfksoHXzA1qjANL58GhjwqkxpB'
          nullable: true
        email:
          type: string
          description: |
            End-user email.

            This property is currently populated on orders placed through offset links.
          example: 'john@doe.com'
          nullable: true
    OrderByQuantityProperties:
      type: object
      required:
        - requested_quantity
        - requested_value
        - estimate_id
      properties:
        requested_quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1045'
          description: Requested quantity of CO2 offsets to purchase in tonnes.
        requested_value:
          description: Requested value of CO2 offsets to purchase in the account's currency.
          oneOf:
            - $ref: '#/components/schemas/NullEnum'
        estimate_id:
          description: The emission calculation unique identifier
          oneOf:
            - $ref: '#/components/schemas/NullEnum'
    OrderByQuantity:
      title: Order by quantity
      allOf:
        - $ref: '#/components/schemas/OrderBase'
        - $ref: '#/components/schemas/OrderByQuantityProperties'
      example:
        id: 'VfdoQ0PZjGMzvYO46lNA6kbgN1eOJx9B'
        metadata: {}
        idempotency_key: null
        type: 'quantity'
        status: 'placed'
        currency: 'USD'
        offset_cost: '0.31'
        total_cost: '0.35'
        commission: '0.04'
        quantity: '0.012069'
        created_at: '2023-01-04T15:00:27.349Z'
        bundles:
          - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
            bundle_name: 'Conserving forests in Asia'
            quantity: '0.011466'
            unit_price: '13.57'
            gross_unit_price: '15.08'
            offset_cost: '0.16'
            insufficient_available_quantity: null
          - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
            bundle_name: 'Ocean Carbon Removal'
            quantity: '0.000603'
            unit_price: '250'
            gross_unit_price: '277.78'
            offset_cost: '0.15'
            insufficient_available_quantity: null
        projects: []
        certificate: null
        certificate_url: null
        offset_link_id: null
        email: null
        estimate_id: null
        requested_quantity: '0.01207'
        requested_value: null
    OrderByValueProperties:
      type: object
      required:
        - requested_value
        - requested_quantity
        - estimate_id
      properties:
        requested_value:
          description: Requested value of CO2 offsets to purchase in the account's currency.
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7700'
        requested_quantity:
          description: Requested quantity of CO2 offsets to purchase in tonnes.
          oneOf:
            - $ref: '#/components/schemas/NullEnum'
        estimate_id:
          description: The emission calculation unique identifier
          oneOf:
            - $ref: '#/components/schemas/NullEnum'
    OrderByValue:
      title: Order by value
      allOf:
        - $ref: '#/components/schemas/OrderBase'
        - $ref: '#/components/schemas/OrderByValueProperties'
      example:
        id: 'VfdoQ0PZjGMzvYO46lNA6kbgN1eOJx9B'
        metadata: {}
        idempotency_key: null
        type: 'value'
        status: 'placed'
        currency: 'USD'
        offset_cost: '0.49'
        total_cost: '0.54'
        commission: '0.05'
        quantity: '0.019137'
        created_at: '2023-01-04T15:00:27.349Z'
        bundles:
          - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
            bundle_name: 'Conserving forests in Asia'
            quantity: '0.018181'
            unit_price: '13.57'
            gross_unit_price: '15.08'
            offset_cost: '0.25'
            insufficient_available_quantity: null
          - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
            bundle_name: 'Ocean Carbon Removal'
            quantity: '0.000956'
            unit_price: '250'
            gross_unit_price: '277.78'
            offset_cost: '0.24'
            insufficient_available_quantity: null
        projects: []
        certificate: null
        certificate_url: null
        offset_link_id: null
        email: null
        estimate_id: null
        requested_quantity: null
        requested_value: '0.54'
    OrderByEstimate:
      title: Order by emission estimate
      allOf:
        - $ref: '#/components/schemas/OrderBase'
        - $ref: '#/components/schemas/OrderByEstimateProperties'
    OrderByEstimateProperties:
      type: object
      required:
        - estimate_id
        - requested_value
        - requested_quantity
      properties:
        estimate_id:
          type: string
          description: The emission calculation unique identifier
          example: '90ng23MKvLqbkpMwMw7yMBD4wJQrV6O6'
        requested_value:
          description: Requested value of CO2 offsets to purchase in the account's currency.
          oneOf:
            - $ref: '#/components/schemas/NullEnum'
        requested_quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1045'
          description: Requested quantity of CO2 offsets to purchase in tonnes.
    Order:
      type: object
      description: |
        An Order represents a carbon credit purchase.

        Orders are placed against one or multiple project bundles. Credits are allocated to the Order from any of the projects that belong to the bundles. These are then retired.

        An Order transitions through multiple statuses throughout its lifetime as Lune fulfills the Order.

        As soon as an Order has a credit retired, the Order's certificate can be downloaded.
      allOf:
        - $ref: '#/components/schemas/OrderBase'
        - type: object
          oneOf:
            - $ref: '#/components/schemas/OrderByQuantityProperties'
            - $ref: '#/components/schemas/OrderByEstimateProperties'
            - $ref: '#/components/schemas/OrderByValueProperties'
          discriminator:
            propertyName: type
            mapping:
              quantity: '#/components/schemas/OrderByQuantityProperties'
              value: '#/components/schemas/OrderByValueProperties'
    OrderProject:
      type: object
      required:
        - project_id
        - project_name
        - project_type
        - project_slug
        - quantity
        - unit_price
        - offset_cost
        - status
      properties:
        project_id:
          type: string
          description: The project's unique identifier
          example: xe1BEV2VZqnzPkYxJgALg0GeQDoXlWO5
        project_name:
          type: string
          description: The project's name
          example: 'Alto Mayo'
        project_type:
          type: string
          description: The project's offset type, eg Forest conservation, Afforestation, Direct Air Capture
          example: 'Forest conservation'
        project_slug:
          type: string
          description: The project's unique slug
          example: 'alto-mayo'
        project_logo:
          type: string
          description: URL to the project's logo
          example: 'https://assets.lune.co/projects/green-sand-logo.png'
        quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1040'
          description: Carbon offset purchased (tonnes CO2)
        unit_price:
          type: string
          description: |
            Project unit price per tonne CO2

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '6.09'
        offset_cost:
          type: string
          description: |
            The net offset cost being purchased.

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7176.00'
        status:
          description: |
            Describes whether credits for a project have been allocated to an order or retired
          type: string
          enum:
            - allocated
            - retired
          example: 'retired'
    OrderBundle:
      type: object
      required:
        - bundle_id
        - bundle_name
        - quantity
        - unit_price
        - gross_unit_price
        - offset_cost
        - insufficient_available_quantity
      properties:
        bundle_id:
          type: string
          description: The bundle's unique identifier
          example: va1BEV2VZqnzPkYxJgALg0GeQDoXlWO5
        bundle_name:
          type: string
          description: The bundle's name
          example: 'Latin America Forestry'
        primary_image:
          type: string
          description: A bundle's image URL
          example: 'https://assets.lune.co/bundles/latin-america-forestry.png'
        quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1040'
          description: Quantity for the specific bundle (tonnes CO2)
        unit_price:
          type: string
          description: |
            Bundle unit price per tonne CO2

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '6.90'
        gross_unit_price:
          type: string
          description: |
            Bundle unit price per tonne CO2 inclusive of fees.

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7.90'
        offset_cost:
          type: string
          description: |
            The bundle's net offset cost being purchased.

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7176.00'
        insufficient_available_quantity:
          type: boolean
          description: |
            If true, there is no inventory necessary to fully satisfy the order for this bundle.

          example: true
          nullable: true
    PaginatedBase:
      type: object
      required:
        - has_more
        - next_cursor
      properties:
        has_more:
          type: boolean
          description: |
            Whether or not there are more elements available after this set.

            If false, this set comprises the end of the array.

            Part of a paginated response.
        next_cursor:
          description: |
            The cursor value to be used as the after parameter for fetching the next page of results.

            `null` if `has_more` is `false`.
          type: string
          nullable: true
    PaginatedOrders:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              description: |
                An array of Order objects ordered by creation date descending.

                Part of a paginated response.
              items:
                $ref: '#/components/schemas/Order'
    OrderQuoteBase:
      type: object
      required:
        - currency
        - estimated_quantity
        - estimated_commission
        - estimated_offset_cost
        - estimated_total_cost
        - bundles
      properties:
        currency:
          type: string
          example: 'GBP'
          description: Currency code
        estimated_quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1040'
          description: |
            Estimated quantity (tonnes CO2).

            May be lower than `requested_quantity`.
        estimated_offset_cost:
          type: string
          description: |
            Estimated offset cost

            Unit: order quote currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7176.00'
        estimated_total_cost:
          type: string
          description: |
            Estimated total cost inclusive of Lune fees.

            Unit: order quote currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7696.00'
        estimated_commission:
          type: string
          description: Estimated commission
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '520.00'
        bundles:
          type: array
          description: |
            Bundles included in the quote including quantity and cost breakdown.
          items:
            $ref: '#/components/schemas/OrderBundle'
    OrderQuoteByQuantity:
      allOf:
        - $ref: '#/components/schemas/OrderQuoteBase'
        - type: object
          required:
            - requested_quantity
            - requested_value
          properties:
            requested_quantity:
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?$'
              example: '1045'
              description: |
                Requested quantity for the specific bundle (tonnes CO2).

                requested_quantity may be returned as part of an emission estimate response, in which case this property contains the equivalent value as the `mass` property.
            requested_value:
              description: Requested value of CO2 offsets to purchase in the account's currency.
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?$'
              example: '7700'
              nullable: true
      example:
        currency: 'USD'
        requested_quantity: '0.01207'
        estimated_offset_cost: '0.31'
        estimated_total_cost: '0.35'
        estimated_commission: '0.04'
        estimated_quantity: '0.012069'
        bundles:
          - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
            bundle_name: 'Conserving forests in Asia'
            quantity: '0.011466'
            unit_price: '13.57'
            gross_unit_price: '15.08'
            offset_cost: '0.16'
            insufficient_available_quantity: null
          - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
            bundle_name: 'Ocean Carbon Removal'
            quantity: '0.000603'
            unit_price: '250'
            gross_unit_price: '277.78'
            offset_cost: '0.15'
            insufficient_available_quantity: null
    OrderQuoteByValue:
      allOf:
        - $ref: '#/components/schemas/OrderQuoteBase'
        - type: object
          required:
            - requested_value
            - requested_quantity
          properties:
            requested_value:
              description: Requested order value inclusive of commission
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?$'
              example: '7700'
            requested_quantity:
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?$'
              example: '1045'
              description: Requested quantity of CO2 offsets to purchase in tonnes.
              nullable: true
      example:
        currency: 'USD'
        requested_value: '0.54'
        estimated_offset_cost: '0.49'
        estimated_total_cost: '0.54'
        estimated_commission: '0.05'
        estimated_quantity: '0.019137'
        bundles:
          - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
            bundle_name: 'Conserving forests in Asia'
            quantity: '0.018181'
            unit_price: '13.57'
            gross_unit_price: '15.08'
            offset_cost: '0.25'
            insufficient_available_quantity: null
          - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
            bundle_name: 'Ocean Carbon Removal'
            quantity: '0.000956'
            unit_price: '250'
            gross_unit_price: '277.78'
            offset_cost: '0.24'
            insufficient_available_quantity: null
    PaginatedBundles:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              description: |
                An array of Bundle objects.

                Part of a paginated response.
              items:
                $ref: '#/components/schemas/Bundle'
    BundleSummary:
      type: object
      required:
        - id
        - name
        - unit_price
        - gross_unit_price
        - currency
        - background_colour
        - primary_image
        - primary_image_hires
        - small_thumbnail
        - description
        - disabled
        - available_quantity
        - offset_type
        - approach
        - carbon_permanence
      properties:
        id:
          type: string
          example: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          description: The bundle's unique identifier
        name:
          type: string
          description: The bundle's name
          example: 'Latin America Forestry'
        unit_price:
          type: string
          description: |
            Bundle unit price per tonne CO2
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '6.09'
        gross_unit_price:
          type: string
          description: |
            Bundle unit price per tonne CO2 inclusive of fees
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7.09'
        currency:
          type: string
          example: 'GBP'
          description: Currency code
        background_colour:
          type: string
          description: A bundle's background colour in hexadecimal format
          example: '#AABBCC'
          nullable: true
        primary_image:
          type: string
          description: A bundle's image URL
          example: 'https://assets.lune.co/bundles/latin-america-forestry.png'
          nullable: true
        large_image:
          type: string
          description: A bundle's larger image URL
          example: 'https://assets.lune.co/bundles/latin-america-forestry-lg.png'
          nullable: true
        primary_image_hires:
          type: string
          description: A bundle's high resolution image URL
          example: 'https://assets.lune.co/bundles/latin-america-hires.jpg'
          nullable: true
        small_thumbnail:
          type: string
          description: A bundle's small thumbnail image URL
          example: 'https://assets.lune.co/bundles/latin-america-thumbnail.jpg'
          nullable: true
        description:
          type: string
          description: The bundle's description
          example: 'A conglomeration of renewable energy projects around the world'
          nullable: true
        disabled:
          type: boolean
          example: false
          description: |
            Disabled bundles do not accept orders
        available_quantity:
          type: string
          description: |
            Quantity of CO2 offsets available to purchase (in tonnes).

            If available_quantity is null, assume there is an unlimited amount of offsets to purchase.
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1000.09'
          nullable: true
        offset_type:
          type: string
          description: |
            Offset type classification
          enum:
            - emissions_reduction
            - carbon_removal
            # We need null to be an explicit enum member here in order for our response validation
            # middleware to work correctly. This is *in addition to* "nullable: true" below (which is
            # needed too).
            - null
          example: 'emissions_reduction'
          nullable: true
        approach:
          type: string
          description: Bundle approach
          enum:
            - traditional
            - innovative
            # We need null to be an explicit enum member here in order for our response validation
            # middleware to work correctly. This is *in addition to* "nullable: true" below (which is
            # needed too).
            - null
          example: 'traditional'
          nullable: true
        carbon_permanence:
          $ref: '#/components/schemas/CarbonPermanence'
    Bundle:
      description: |
        Group of projects of similar price and characteristics.

        Orders are placed against bundles.
      allOf:
        - $ref: '#/components/schemas/BundleSummary'
        - type: object
          required:
            - projects
          properties:
            projects:
              type: array
              description: An array of Project objects that belong to the bundle.
              items:
                $ref: '#/components/schemas/ProjectSummary'
    PaginatedProjects:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              description: |
                An array of Project objects.

                Part of a paginated response.
              items:
                $ref: '#/components/schemas/Project'
    Media:
      type: object
      required:
        - type
        - url
        - attribution_text
        - attribution_url
      properties:
        type:
          type: string
          enum:
            - image
            - video
          example: 'image'
          description: The type of the media item
        url:
          type: string
          example: https://assets.lune.co/bundles/biochar.png
          description: The URL of the media item
        attribution_text:
          type: string
          example: instagram.com/conservationorg
          description: A short description of where the image or video was sourced
          nullable: true
        attribution_url:
          type: string
          example: https://conservationorg.com
          description: A URL pointing to where the image or video was sourced
          nullable: true
    ProjectSummary:
      type: object
      required:
        - id
        - name
        - short_name
        - slug
        - description
        - project_type
        - registry_name
        - registry_link
        - latitude
        - longitude
        - country_name
        - country_code
        - region
        - logo
        - primary_image
        - thumbnail_image
        - results
        - un_sdg
        - media
        - disabled
        - crediting_start_date
        - crediting_end_date
        - registration_date
        - protocol
        - methodology
        - durability
        - additional_standards_met
        - verifying_body
        - risk_of_reversal
        - risk_of_predicted_emissions
        - avg_annual_emission_reductions
      properties:
        id:
          type: string
          example: 'owda1kVEl60jnPykZeADr57Z8OqbKMXx'
          description: The projects's unique identifier
        name:
          type: string
          description: The project's name
          example: 'Alto Mayo'
        short_name:
          type: string
          description: The project's short name. May coincide with name.
          example: 'Alto Mayo'
        slug:
          type: string
          description: Project slug
          example: 'alto-mayo'
        description:
          description: Project description
          type: string
        project_type:
          type: string
          description: The project's offset type, eg Forest conservation, Afforestation, Direct Air Capture
          example: 'Forest conservation'
        registry_name:
          $ref: '#/components/schemas/Registry'
        registry_link:
          type: string
          description: A link to the registry's project details page.
          example: 'https://registry.verra.org/app/projectDetail/VCS/1566'
          nullable: true
        latitude:
          type: number
          format: float
          description: Latitude
          example: '-5.87798'
        longitude:
          type: number
          format: float
          description: Logitude
          example: '-77.612352'
        country_name:
          type: string
          description: The project's country
          example: 'Peru'
        country_code:
          type: string
          description: The project's 3 character country code
        region:
          type: string
          description: The project's region
          example: 'Huancavelica'
          nullable: true
        logo:
          type: string
          description: A project logo image URL
          example: 'https://assets.lune.co/projects/Alto+Mayo+1+logo.png'
          nullable: true
        primary_image:
          type: string
          description: A project image URL
          example: 'https://assets.lune.co/projects/Alto+Mayo+1.png'
          nullable: true
        thumbnail_image:
          type: string
          description: A project thumbnail image URL
          example: 'https://assets.lune.co/projects/Alto+Mayo+1_thumbnail.png'
          nullable: true
        results:
          description: Project results
          type: array
          items:
            type: string
          example: ['Reduced deforestation of 75% from baseline levels, the first time a project in Peru reaches such high results', 'Co-benefits include: poverty reduction across local communities, education around sustainable farming, conservation of biodiversity']
          nullable: true
        un_sdg:
          description: |
            UN Sustainable Development Goals.

            Each number in the array represent one UN Sustainable Development Goal. See https://sdgs.un.org/goals.
          type: array
          items:
            type: number
          example: [1, 4, 8, 13, 15]
          nullable: true
        disabled:
          type: boolean
          example: false
          description: |
            Disabled projects do not get allocated to orders
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
          description: A list of images and videos belonging to the project.
        crediting_start_date:
          type: string
          format: date
          example: '2024-01-01'
          description: Project’s crediting period start date.
          nullable: true
        crediting_end_date:
          type: string
          format: date
          example: '2024-01-01'
          description: Project’s crediting period end date.
          nullable: true
        registration_date:
          type: string
          format: date
          example: '2024-01-01'
          description: Date the project was registered in the registry.
          nullable: true
        protocol:
          type: array
          items:
            type: string
          example: [ 'Verra VCS', 'Verra CCB' ]
          description: The standard followed to assure that a carbon offset project delivers on carbon reduction or removal.
          nullable: true
        methodology:
          type: string
          example: 'VM0007'
          description: Detailed application of the broader principles set out in the protocol.
          nullable: true
        durability:
          type: string
          example: '100+'
          description: Expected duration of the carbon storage (carbon removal projects only).
          nullable: true
        additional_standards_met:
          type: array
          items:
            type: string
          example: [ 'CCB Third Edition' ]
          description: Any additional standards the project meets.
          nullable: true
        verifying_body:
          type: string
          example: 'SCS Global Services'
          description: Independent entity assessing compliance of carbon projects with protocol and methodology.
          nullable: true
        risk_of_reversal:
          type: string
          example: 'Use of Verra buffer pool'
          description: Mitigation plan for the risk of reversal.
          nullable: true
        risk_of_predicted_emissions:
          type: string
          example: 'Non-issuance of credits'
          description: Mitigation plan for the risk of predicted reductions or removals not occurring.
          nullable: true
        avg_annual_emission_reductions:
          type: string
          example: '333978'
          pattern: '^[0-9]+(\.[0-9]+)?$'
          description: Estimated average annual reductions or removals.
          nullable: true
    Project:
      description: |
        A Project represents the entity which issues carbon credits because of its environmental activity which reduces, avoids, or removes emissions from the atmosphere.

        Clients cannot purchase a specific Project's credits by creating an order.
        A Project's credits are allocated to an order if the order has purchased a project bundle the project belongs to.
      allOf:
        - $ref: '#/components/schemas/ProjectSummary'
        - type: object
          required:
            - bundles
            - impact_summary
            - quality_assessment
            - links_and_news
            - carbon_credits
            - timeline
            - carbon_storage_over_time
            - datasets
          properties:
            bundles:
              type: array
              description: An array of Bundle objects the project is part of.
              items:
                $ref: '#/components/schemas/BundleSummary'
            impact_summary:
              nullable: true
              description: |
                The items of the array are ordered exactly as they're meant to be used.

                A null value means there's no data or the section is disabled.
              type: array
              minItems: 1
              items:
                type: object
                required:
                  - icon
                  - label
                  - title
                  - description
                  - image_url
                properties:
                  icon:
                    $ref: '#/components/schemas/MuiIcon'
                  label:
                    type: string
                    description: A short piece of text to go with the icon
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  description:
                    type: string
                    minLength: 1
                  image_url:
                    type: string
                    minLength: 1
            datasets:
              nullable: true
              description: |
                Datasets available for the project.

                For instance Forest loss or Biodiversity.
              type: array
              items:
                type: object
                required:
                  - dataset
                  - description
                  - thumbnail_url
                properties:
                  dataset:
                    type: string
                    description: Dataset's name.
                    minLength: 1
                  description:
                    type: string
                    description: Project specific commentary regarding the dataset.
                    minLength: 1
                  thumbnail_url:
                    type: string
                    description: Project specific thumbnail URL regarding the dataset.
                    minLength: 1
            quality_assessment:
              description: |
                The way the project relates to every of the five Project Quality Assessment categories.

                A null value means there's no data or the section is disabled.
              nullable: true
              type: object
              required:
                - durability
                - additionality
                - measurement
                - risk_mitigation
                - cobenefits
              properties:
                durability:
                  $ref: '#/components/schemas/TitleAndDescription'
                additionality:
                  $ref: '#/components/schemas/TitleAndDescription'
                measurement:
                  $ref: '#/components/schemas/TitleAndDescription'
                risk_mitigation:
                  $ref: '#/components/schemas/TitleAndDescription'
                cobenefits:
                  $ref: '#/components/schemas/TitleAndDescription'
            links_and_news:
              description: A null value means there's no data or the section is disabled.
              nullable: true
              type: object
              required:
                - links
                - news
              properties:
                links:
                  description: The order of the array is how the elements are meant to be used.
                  type: array
                  items:
                    type: object
                    required:
                      - destination_url
                      - title
                      - favicon_url
                    properties:
                      destination_url:
                        type: string
                        minLength: 1
                      title:
                        type: string
                        minLength: 1
                      favicon_url:
                        type: string
                        minLength: 1
                news:
                  description: The order of the array is how the elements are meant to be used.
                  type: array
                  items:
                    type: object
                    required:
                      - image_url
                      - favicon_url
                      - article_url
                      - title
                      - description
                      - published_at
                    properties:
                      image_url:
                        type: string
                        minLength: 1
                      favicon_url:
                        type: string
                        minLength: 1
                      article_url:
                        type: string
                        minLength: 1
                      title:
                        type: string
                        minLength: 1
                      description:
                        type: string
                        minLength: 1
                      published_at:
                        nullable: true
                        type: string
                        format: date-time
            carbon_credits:
              description: |
                A null value means there's no data or the section is disabled. Note that
                availability can be missing data or be disabled separately.
              nullable: true
              type: object
              required:
                - offset_delivery
                - retirement_timeframe
                - inventory
              properties:
                offset_delivery:
                  type: string
                  enum:
                    - ex_post
                    - ex_ante
                    - pre_purchase
                retirement_timeframe:
                  type: string
                  enum:
                    - instant
                    - near_term
                    - future
                inventory:
                  description: |
                    What's available for sale.

                    A null value means there's no data or the section is disabled.

                    The array is ordered newest to oldest (per the year property).
                  nullable: true
                  type: array
                  minItems: 1
                  items:
                    type: object
                    required:
                      - vintage
                      - quantity
                      - price
                    properties:
                      vintage:
                        description: This is an opaque string and you may not interpret it in any way.
                        type: string
                        minLength: 1
                      quantity:
                        description: In tonnes.
                        type: number
                      price:
                        $ref: '#/components/schemas/MonetaryAmount'
            timeline:
              description: |
                The array order is newest to oldest.

                A null value means there's no data or the section is disabled.
              nullable: true
              type: array
              minItems: 1
              items:
                type: object
                required:
                  - year
                  - description
                properties:
                  year:
                    type: number
                  description:
                    type: string
                    minLength: 1
            carbon_storage_over_time:
              description: |
                The order of the array is oldest to newest (per the year property).

                A null value means there's no data or the section is disabled.

                The values (except for year, of course) are in tonnes.
              nullable: true
              type: array
              minItems: 1
              items:
                type: object
                required:
                  - year
                  - baseline
                  - carbon_stock
                  - assumed_leakage
                  - buffer
                  - credits_issued
                properties:
                  year:
                    type: number
                  baseline:
                    type: number
                  carbon_stock:
                    type: number
                  assumed_leakage:
                    type: number
                  buffer:
                    type: number
                  credits_issued:
                    type: number
    ProjectPerimeter:
      description: |
        An object containing detailed geographical coordinates outlining a project's perimeter.
      type: object
      required:
        - coordinates
      properties:
        coordinates:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/GeographicCoordinates'
    MuiIcon:
      type: string
      example: 'tree'
      description: MUI icon name
    TitleAndDescription:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
    AccountScope:
      type: string
      description: |
          The account's scope.

          Determines if the resource is a regular account or a client account.
      enum:
        - account
        - client_account
      example: 'account'
    AccountType:
      type: string
      description: |
          The account's type.
      enum:
        - live
        - test
      example: 'live'
    AccountBase:
      type: object
      required:
        - id
        - name
        - organisation_id
        - handle
        - currency
        - type
        - logo
        - beneficiary
        - bundle_portfolio_id
      properties:
        id:
          type: string
          example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
          description: The Account's unique identifier
        name:
          type: string
          description: The Account's name
          example: 'Acme Corporation'
        organisation_id:
          type: string
          description: The unique identifier of the organisation this account belongs to
          example: 'VndoQ0PZjGMzvYOZGwqy6kbgN1eOJx9B'
        handle:
          type: string
          pattern: '^[a-z0-9-_]+$'
          nullable: true
          description: |
            `handle` is a client defined URL-friendly string that identifies the account.

            The `handle` is unique per organisation and account type.
        currency:
          $ref: '#/components/schemas/AccountCurrencyCode'
        type:
          $ref: '#/components/schemas/AccountType'
        logo:
          type: string
          description: The account logo
          nullable: true
        beneficiary:
          type: string
          description: |
            Retirement beneficiary

            This is the name that appears on future retirements that are made in this account.
            If none is present, the organisation beneficiary will be used instead.
          minLength: 1
          nullable: true
        bundle_portfolio_id:
          type: string
          description: Bundle portfolio id tied to the account.
          example: 'Jvhh30a6272NauKv92J7FG1c6Jfxd2E1'
          nullable: true
    AggregatedAnalyticsByProperty:
      type: object
      required:
        - bundle
        - location
        - registry
        - oxford_offsetting_principles
        - offset_type
      properties:
        bundle:
          type: array
          description: An array of objects describing a bundle's aggregated orders.
          items:
            type: object
            required:
              - bundle_id
              - bundle_name
              - quantity
              - value
            properties:
              bundle_id:
                type: string
                description: The bundle's unique identifier.
                example: va1BEV2VZqnzPkYxJgALg0GeQDoXlWO5
              bundle_name:
                type: string
                description: The bundle's name.
                example: 'Latin America Forestry'
              quantity:
                type: string
                pattern: '^[0-9]+(\.[0-9]+)?$'
                example: '500.50'
                description: Quantity of CO2 offsets linked to this activity (tonnes CO2).
              value:
                type: string
                example: '222.667'
                pattern: '^[0-9]+(\.[0-9]+)?$'
                description: CO2 offsets' monetary value.
        location:
          type: array
          description: An array of objects describing a location's aggregated orders.
          items:
            type: object
            required:
              - location
              - quantity
              - value
            properties:
              location:
                type: string
                description: Project location (continent). If a project has yet to be assigned 'Not yet allocated' is returned instead.
                example: 'Europe'
              quantity:
                type: string
                pattern: '^[0-9]+(\.[0-9]+)?$'
                example: '500.50'
                description: Quantity of CO2 offsets linked to this activity (tonnes CO2).
              value:
                type: string
                example: '222.667'
                pattern: '^[0-9]+(\.[0-9]+)?$'
                description: CO2 offsets' monetary value
        registry:
          type: array
          description: An array of objects describing a registry's aggregated orders.
          items:
            type: object
            required:
              - registry_name
              - quantity
              - value
            properties:
              registry_name:
                oneOf:
                  - $ref: '#/components/schemas/Registry'
                  - type: string
                    enum:
                      - 'Not certified'
                      - 'Not yet allocated'
                description: The project's Verification Standard Entity name or equivalent organization.
                  If a project has no registry, 'Not certified' is returned.
                  If a project has yet to be assigned, 'Not yet allocated' is returned.
                example: 'Verra'
              quantity:
                type: string
                pattern: '^[0-9]+(\.[0-9]+)?$'
                example: '500.50'
                description: Quantity of CO2 offsets linked to this activity (tonnes CO2).
              value:
                type: string
                example: '222.667'
                pattern: '^[0-9]+(\.[0-9]+)?$'
                description: CO2 offsets' monetary value.
        oxford_offsetting_principles:
          type: array
          description: An array of objects describing aggregated orders for each Oxford Offsetting Principle's type.
          items:
            type: object
            required:
              - type
              - quantity
              - value
            properties:
              type:
                type: number
                description: |
                  Oxford Offsetting Principles' type.

                  https://lune.co/blog/the-oxford-offsetting-principles-a-framework-to-maximise-the-impact-of-business-carbon-offsetting/.
                example: 5
                minimum: 1
                maximum: 5
              quantity:
                type: string
                pattern: '^[0-9]+(\.[0-9]+)?$'
                example: '500.50'
                description: Quantity of CO2 offsets linked to this activity (tonnes CO2)
              value:
                type: string
                example: '222.667'
                pattern: '^[0-9]+(\.[0-9]+)?$'
                description: CO2 offsets' monetary value
        offset_type:
          type: array
          description: An array of objects describing aggregated orders by offset type.
          items:
            type: object
            required:
              - offset_type
              - quantity
              - value
            properties:
              offset_type:
                $ref: '#/components/schemas/OffsetType'
              quantity:
                type: string
                pattern: '^[0-9]+(\.[0-9]+)?$'
                example: '500.50'
                description: Quantity of CO2 offsets linked to this activity (tonnes CO2)
              value:
                type: string
                example: '222.667'
                pattern: '^[0-9]+(\.[0-9]+)?$'
                description: CO2 offsets' monetary value
    CumulativeBundleAnalytics:
      type: array
      description: An array of analytics by bundle objects.
      items:
        $ref: '#/components/schemas/AnalyticsByBundle'
    Analytics:
      description: |
        Analytics endpoints return data which help you analyse and understand your activity.

        For instance, you may request emission estimates over time or carbon credit purchases by location.
      type: object
    AnalyticsByBundle:
      type: object
      required:
        - bundle_id
        - bundle_name
        - timeseries
      properties:
        bundle_id:
          type: string
          description: The bundle's unique identifier
          example: va1BEV2VZqnzPkYxJgALg0GeQDoXlWO5
        bundle_name:
          type: string
          description: The bundle's name
          example: 'Latin America Forestry'
        timeseries:
          $ref: '#/components/schemas/QuantityAndValueTimeseries'
    AnalyticsMetrics:
      type: object
      required:
        - number_of_un_sdgs
        - number_of_projects
        - un_sdg
      properties:
        number_of_un_sdgs:
          type: number
          description: The number of supported UN Sustainable Development Goals (SDGs).
          example: 10
        number_of_projects:
          type: number
          description: The number of supported carbon offset projects.
          example: 10
        un_sdg:
          $ref: '#/components/schemas/SupportedUNSdg'
    EmissionCalculationMetrics:
      type: object
      required:
        - timeseries
      properties:
        timeseries:
          $ref: '#/components/schemas/CountTimeseries'
    AnalyticsShippingEstimates:
      type: object
      required:
        - emission_timeseries
        - carbon_intensity_timeseries
        - carbon_intensity_total
        - account
      properties:
        emission_timeseries:
          $ref: '#/components/schemas/ShippingEmissionTimeseries'
        carbon_intensity_timeseries:
          $ref: '#/components/schemas/ShippingCarbonIntensityTimeseries'
        carbon_intensity_total:
          description: Total carbon intensity for the returned timeframe.
          type: number
        account:
          description: Information about the account the analytics are associated with.
          type: object
          required:
            - name
            - type
            - logo
          properties:
            name:
              description: The account's name.
              type: string
            type:
              description: The account's type.
              $ref: '#/components/schemas/AccountType'
            logo:
              type: string
              description: The account's logo URL.
              example: 'https://client-assets.lune.co/XheugMiTUHynItnaYSvCF.png'
              nullable: true
    ShippingEmissionTimeseries:
      description: Timeseries containing the total emissions (tCO₂e) for the various shipping methods. Each element refers to a particular timeframe as seen on `date`.
      type: array
      items:
        type: object
        required:
          - date
          - air
          - sea
          - road
          - rail
          - inland_waterway
          - logistic_site
        properties:
          date:
            type: string
            format: date
            example: "2021-09-09"
          air:
            type: number
            example: 21
          sea:
            type: number
            example: 22
          road:
            type: number
            example: 23
          rail:
            type: number
            example: 24
          inland_waterway:
            type: number
            example: 25
          logistic_site:
            type: number
            example: 25
        example:
          - date: '2022-06-25'
            air: 231
            sea: 127
            road: 730
            rail: 52
            inland_waterway: 0
            logistic_site: 2
          - date: '2022-06-27'
            air: 500
            sea: 321
            road: 338
            rail: 17
            inland_waterway: 49
            logistic_site: 8
    ShippingCarbonIntensityTimeseries:
      description: Timeseries containing the mean value of the carbon intensities (gCO₂e/tkm) for shipping estimates. The value represents the emission per tonnes transported per kilometer traveled.
      $ref: '#/components/schemas/AverageTimeseries'
    QuantityAndValueTimeseries:
      type: array
      description: A timeseries of quantities and values.
      items:
        type: object
        required:
          - date
          - quantity
          - value
        properties:
          date:
              type: string
              format: date
              example: "2021-09-09"
          value:
            type: string
            example: '222.667'
            pattern: '^[0-9]+(\.[0-9]+)?$'
          quantity:
            type: string
            pattern: '^[0-9]+(\.[0-9]+)?$'
            example: '500.50'
            description: Quantity of CO2 offsets linked to this activity (tonnes CO2)
        example:
          - date: '2022-06-25'
            value: '13.20'
            quantity: '503.342'
          - date: '2022-06-26'
            value: '23.20'
            quantity: '1503.342'
          - date: '2022-06-27'
            value: '64.23'
            quantity: '4700.451'
    CountTimeseries:
      type: array
      description: A timeseries representing counters.
      items:
        type: object
        required:
          - date
          - count
        properties:
          date:
              type: string
              format: date
              example: "2021-09-09"
          count:
            type: number
        example:
          - date: '2022-06-25'
            count: 500
          - date: '2022-06-26'
            count: 550
          - date: '2022-06-27'
            count: 800
    AverageTimeseries:
      type: array
      description: A timeseries representing averages.
      items:
        type: object
        required:
          - date
          - average
        properties:
          date:
            type: string
            format: date
            example: "2021-09-09"
          average:
            type: number
        example:
          - date: '2022-06-25'
            average: 500
          - date: '2022-06-26'
            average: 550
          - date: '2022-06-27'
            average: 800
    ElectricityEstimateRequest:
      type: object
      description: Parameters for estimating electricity emissions
      required:
        - consumption
      properties:
        name:
          description: A name to reference this calculation.
          type: string
        consumption:
          $ref: '#/components/schemas/ElectricityConsumption'
        country_code:
          type: string
          description: |
              The three-letter code of the country where the consumption takes place, if applicable.

              Providing this value will improve the estimation process. If the value is not provided
              the global average will be used.
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
        metadata:
          $ref: '#/components/schemas/Metadata'
        idempotency_key:
          $ref: '#/components/schemas/EstimateIdempotencyKey'
    FlightEstimateRequest:
      type: object
      description: Parameters for estimating emissions for commercial plane travel
      required:
        - route
      properties:
        route:
          description: Either the flight distance or the start/destination airport code (ICAO or IATA).
          oneOf:
            - $ref: '#/components/schemas/Distance'
            - $ref: '#/components/schemas/AirportSourceDestination'
        cabin_class:
          $ref: '#/components/schemas/CabinClass'
        passengers:
          description: Number of passengers the calculation should be applied to.

            This parameter defaults to 1.
          type: number
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
        name:
          description: A name used to reference this calculation.
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        idempotency_key:
          $ref: '#/components/schemas/EstimateIdempotencyKey'
    PassengerFlightEstimateRequest:
      type: object
      description: Parameters for estimating emissions for commercial plane travel
      required:
        - route
        - cabin_class
      properties:
        route:
          description: Either the flight distance or the start/destination airport code (ICAO or IATA).
          oneOf:
            - $ref: '#/components/schemas/Distance'
            - $ref: '#/components/schemas/AirportSourceDestination'
        cabin_class:
          $ref: '#/components/schemas/CabinClass'
    PassengerRailEstimateRequest:
      type: object
      description: Parameters for estimating emissions for a passenger train
      required:
        - route
        - rail_type
      properties:
        route:
          description: Either the flight distance or the start/destination address or source and destination
          oneOf:
            - $ref: '#/components/schemas/Distance'
            - $ref: '#/components/schemas/SourceDestination'
        rail_type:
          type: string
          enum:
            - national_rail
            - international_rail
            - light_rail_or_tram
    PassengerRoadEstimateRequest:
      type: object
      description: Parameters for estimating emissions for passenger vehicle
      required:
        - route
        - vehicle_type
      properties:
        route:
          description: Either the flight distance or the start/destination address or source and destination
          oneOf:
            - $ref: '#/components/schemas/Distance'
            - $ref: '#/components/schemas/SourceDestination'
        vehicle_type:
          type: string
          enum:
            - car_mini
            - car_supermini
            - car_lower_medium
            - car_upper_medium
            - car_executive
            - car_luxury
            - car_sports
            - car_dual_purpose_4x4
            - car_mpv
            - motorcycle_small
            - motorcycle_medium
            - motorcycle_large
            - motorcycle_average
          description: |
            * `car_mini`: smallest category of car sometimes referred to as a city car. Examples include`: Citroën C1, Fiat/Alfa Romeo 500 and Panda, Peugeot 107, Volkswagen up!, Renault TWINGO, Toyota AYGO, smart fortwo and Hyundai i 10.
            * `car_supermini`: car that is larger than a city car, but smaller than a small family car. Examples include`: Ford Fiesta, Renault CLIO, Volkswagen Polo, Citroën C2 and C3, Opel Corsa, Peugeot 208, and Toyota Yaris.
            * `car_lower_medium`: small, compact family car. Examples include`: Volkswagen Golf, Ford Focus, Opel Astra, Audi A3, BMW 1 Series, Renault Mégane and Toyota Auris.
            * `car_upper_medium`: classed as a large family car. Examples include`: BMW 3 Series, ŠKODA Octavia, Volkswagen Passat, Audi A4, Mercedes Benz C Class and Peugeot 508.
            * `car_executive`: large cars. Examples include`: BMW 5 Series, Audi A5 and A6, Mercedes Benz E Class and Skoda Superb.
            * `car_luxury`: luxury car which is niche in the European market. Examples include`: Jaguar XF, Mercedes-Benz S-Class, .BMW 7 series, Audi A8, Porsche Panamera and Lexus LS.
            * `car_sports`: sport cars are a small, usually two seater with two doors and designed for speed, high acceleration, and manoeuvrability. Examples include`: Mercedes-Benz SLK, Audi TT, Porsche 911 and Boxster, and Peugeot RCZ.
            * `car_dual_purpose_4x4`: sport utility vehicles (SUVs) which have off-road capabilities and four-wheel drive. Examples include`: Suzuki Jimny, Land Rover Discovery and Defender, Toyota Land Cruiser, and Nissan Pathfinder.
            * `car_mpv`: multipurpose cars. Examples include`: Ford C-Max, Renault Scenic, Volkswagen Touran, Opel Zafira, Ford B-Max, and Citroën C3 Picasso and C4 Picasso.
            * `motorcycle_small`: mopeds/scooters up to 125cc.
            * `motorcycle_medium`:  125cc to 500cc
            * `motorcycle_large`: 500cc+
            * `motorcycle_average`: uUnknown engine size
    PassengerTransportationEstimateRequest:
      type: object
      description: Parameters for estimating emissions for passenger transportation
      required:
        - legs
      properties:
        passengers:
          description: Number of passengers the calculation should be applied to.
          type: number
          default: 1
        legs:
          type: array
          description: |
            An array representing all passenger travel legs.
          minItems: 1
          maxItems: 10
          items:
            oneOf:
              - $ref: '#/components/schemas/PassengerRoadEstimateRequest'
              - $ref: '#/components/schemas/PassengerRailEstimateRequest'
              - $ref: '#/components/schemas/PassengerFlightEstimateRequest'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
        name:
          description: A name to reference this calculation.
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        idempotency_key:
          $ref: '#/components/schemas/EstimateIdempotencyKey'
    PassengerTransportationEmissionEstimate:
      description: |
        An emission estimate result for passenger transport involving multiple legs.

        Lune's API returns both the total emissions and per-leg emissions (in the `legs`
        property).

        The ordering of the legs in the estimate is the same as the ordering of the inputs.

        An error with estimating any of the legs will result in the whole estimation process
        failing completely (we don't provide partial estimates in light of a failure).
      allOf:
        - $ref: '#/components/schemas/EmissionEstimate'
        - type: object
          required:
            - id
            - quote
            - legs
            - request
          properties:
            id:
              type: string
              description: The emission calculation unique identifier
              example: '90ng23MKvLqbkpMwMw7yMBD4wJQrV6O6'
            legs:
              type: array
              items:
                $ref: '#/components/schemas/EmissionEstimate'
            quote:
              $ref: '#/components/schemas/EstimateQuote'
            request:
              $ref: '#/components/schemas/PassengerTransportationEstimateRequest'
    CabinClass:
       description: Cabin of class to be used for the specified passengers.

         Higher classes account for more emissions since total weight and volume necessary
         to accomodate the class is higher.

         This parameter defaults to first.
       type: string
       enum:
         - economy
         - business
         - first
       example: 'economy'
    ShippingEstimateRequest:
      description: Parameters for estimating shipping emissions
      allOf:
        - type: object
          required:
            - shipment
          properties:
            shipment:
              $ref: '#/components/schemas/Shipment'
            name:
              description: A name to reference this calculation.
              type: string
            bundle_selection:
              $ref: '#/components/schemas/BundleSelectionRequest'
            quantity_trunc:
              $ref: '#/components/schemas/QuantityTrunc'
            is_shipment:
              type: boolean
              description: |
                When true, the emission estimate refers to an actual shipment of goods, will be included in Lune analytics and can be included in any CO2 emissions reporting.

                This property exists to distinguish booking quotes or forecasts from actual shipments where goods are moved.

                You can mark an estimate as shipment at any time.
              example: true
            shipped_at:
              $ref: '#/components/schemas/ShippedAt'
            metadata:
              $ref: '#/components/schemas/Metadata'
            idempotency_key:
              $ref: '#/components/schemas/EstimateIdempotencyKey'
        - oneOf:
          - type: object
            x-lune-name: Shipping
            x-lune-oneof-default: true
            required:
              - route
              - method
            properties:
              route:
                $ref: '#/components/schemas/ShippingRoute'
              method:
                $ref: '#/components/schemas/ShippingMethod'
              country_code:
                $ref: '#/components/schemas/ShippingCountryCode'
          - type: object
            x-lune-name: Logistics site
            required:
              - method
            properties:
              method:
                $ref: '#/components/schemas/LogisticsSiteMethod'
      example:
        shipment:
          containers: '2'
        route:
          source:
            locode: 'CNSGH'
          destination:
            locode: 'NLRTM'
        method:
          vessel_type: 'container_ship'
        is_shipment: true
        shipped_at: '2023-11-20T10:20:30Z'
    ShippingRoute:
      description: |
        Either the shipping distance or the start/destination address pair.

        Note that for sea transport the source/destination pair should be as close to
        locations of existing and well-known ports as possible. Coordinates or addresses
        that lie far from the shore line or coordinates deep into the sea or ocean will
        result in inaccurate calculations.

        When transporting goods over unusual routes or between unusual points it's better
        to provide us the distance directly to ensure better calculations.
      oneOf:
        - $ref: '#/components/schemas/Distance'
        - $ref: '#/components/schemas/ShippingSourceDestination'
    ShippingCountryCode:
      type: string
      description: |
          The three-letter code of the country where the shipping takes place, if applicable.

          Providing this value will improve the estimation process. If the shipping spans
          multiple countries you can either make multiple per-country estimations or choose
          the country with the largest share of the route.
      example: PRT
    UpdateShippingEstimateAnnotationsRequest:
      oneOf:
        - type: object
          x-lune-name: '`is_shipment` with optional `shipped_at`, `metadata` and `idempotency_key`'
          required:
            - is_shipment
          properties:
            is_shipment:
              description: |
                When true, the emission estimate refers to an actual shipment of goods, will be included in Lune analytics and can be included in any CO2 emissions reporting.

                This property exists to distinguish booking quotes or forecasts from actual shipments where goods are moved.

                You can mark an estimate as shipment at any time.
              type: boolean
            shipped_at:
              $ref: '#/components/schemas/ShippedAt'
            metadata:
              $ref: '#/components/schemas/Metadata'
            idempotency_key:
              $ref: '#/components/schemas/EstimateIdempotencyKey'
        - type: object
          x-lune-name: '`shipped_at` with optional `metadata` and `idempotency_key`'
          required:
            - shipped_at
          properties:
            shipped_at:
              $ref: '#/components/schemas/ShippedAt'
            metadata:
              $ref: '#/components/schemas/Metadata'
            idempotency_key:
              $ref: '#/components/schemas/EstimateIdempotencyKey'
        - type: object
          x-lune-name: '`metadata` with optional `idempotency_key`'
          required:
            - metadata
          properties:
            metadata:
              $ref: '#/components/schemas/Metadata'
            idempotency_key:
              $ref: '#/components/schemas/EstimateIdempotencyKey'
        - type: object
          x-lune-name: Only `idempotency_key`
          required:
            - idempotency_key
          properties:
            idempotency_key:
              $ref: '#/components/schemas/EstimateIdempotencyKey'
    MultiLegShippingEstimateRequest:
      type: object
      description: Parameters for estimating multi-leg shipping emissions
      required:
        - shipment
        - legs
      properties:
        shipment:
          $ref: '#/components/schemas/Shipment'
        legs:
          type: array
          description: An array representing all the legs of a shipment.
          minItems: 1
          maxItems: 10
          items:
            oneOf:
              - type: object
                x-lune-name: Shipping
                x-lune-oneof-default: true
                additionalProperties: false
                required:
                  - route
                  - method
                properties:
                  route:
                    $ref: '#/components/schemas/ShippingRoute'
                  method:
                    $ref: '#/components/schemas/ShippingMethod'
                  country_code:
                    $ref: '#/components/schemas/ShippingCountryCode'
              - type: object
                x-lune-name: Logistics site
                additionalProperties: false
                required:
                  - method
                properties:
                  method:
                    $ref: '#/components/schemas/LogisticsSiteMethod'
        name:
          description: A name to reference this calculation.
          type: string
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
        is_shipment:
          type: boolean
          description: |
            When true, the emission estimate refers to an actual shipment of goods, will be included in Lune analytics and can be included in any CO2 emissions reporting.

            This property exists to distinguish booking quotes or forecasts from actual shipments where goods are moved.

            You can mark an estimate as shipment at any time.
          example: true
        shipped_at:
          $ref: '#/components/schemas/ShippedAt'
        metadata:
          $ref: '#/components/schemas/Metadata'
        idempotency_key:
          $ref: '#/components/schemas/EstimateIdempotencyKey'
      example:
        is_shipment: true
        shipped_at: '2023-11-20T10:20:30Z'
        shipment:
          mass:
            amount: '10.36'
            unit: 't'
        legs:
          - route:
              source:
                lat: 24.211893
                lon: 120.608696
              destination:
                locode: TWTXG
            method: 'diesel_truck'
          - route:
              source:
                locode: TWTXG
              destination:
                locode: TWTPE
            method:
              vessel_type: 'container_ship'
          - route:
              source:
                locode: TWTPE
              destination:
                locode: DEHAM
            method:
              vessel_imo_number: '9893890'
          - method: maritime_container_terminal
          - route:
              source:
                locode: DEHAM
              destination:
                street_line1: Märkische Allee 71
                postcode: '14979'
                city: Großbeeren
                country_code: DEU
            method: truck_articulated_34t
    Shipment:
      description: |
        Either a mass given in kilograms or tonnes (`mass`) or the number of [Twenty-foot Equivalent
        Units (TEUs)](https://en.wikipedia.org/wiki/Twenty-foot_equivalent_unit) (with their cargo type,
        optionally). Note that providing `mass` will result in more accurate estimates for methods other
        than `container_ship`. Estimates using `container_ship` are more precise when the shipment is given
        in TEUs.
      oneOf:
        - type: object
          x-lune-name: Mass
          additionalProperties: false
          required:
            - mass
          properties:
            mass:
              $ref: '#/components/schemas/Mass'
        # This variant handles both containers and containers+mass case
        - type: object
          x-lune-name: Containers
          required:
            - containers
          properties:
            containers:
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?$'
              example: '40.501'
            cargo_type:
              type: string
              description: |
                If omitted, `average` is assumed.

                The following conversions apply:
                * `lightweight`: 1 container = 6 tonnes
                * `average`: 1 container = 10 tonnes
                * `heavyweight`: 1 container = 14.5 tonnes
                * `container_only`: 1 container = 2 tonnes
              enum:
                - lightweight
                - average
                - heavyweight
                - container_only
            mass:
              $ref: '#/components/schemas/Mass'
    ShippingMethod:
      oneOf:
        - $ref: '#/components/schemas/SimpleShippingMethod'
        - $ref: '#/components/schemas/SimpleSeaShippingMethod'
        - $ref: '#/components/schemas/SeaShippingMethod'
        - $ref: '#/components/schemas/ContainerShippingMethod'
        - $ref: '#/components/schemas/IdentifiedVesselShippingMethod'
    SimpleShippingMethod:
      type: string
      description: |
        # Inland waterways

        Vessel sizes:
        * `inland_waterway_motor_vessel_*`:
          * `extra_small` – less than 50 m / 650 t
          * `small` – 50-80 m (650-1000 t)
          * `medium` – 85-110 m (1000-2000 t)
          * `large` – 135 m (2000-3000 t)
        * `inland_waterway_coupled_convoy` – 163-185 m
        * `inland_waterway_pushed_convoy_*`:
          * `small` – 2 barges
          * `medium` – 4-5 barges
          * `large` – 6 barges
        * `inland_waterway_container_vessel_medium` – 110 m
        * `inland_waterway_container_vessel_large` – 135 m

        # Road transport

        As far as road transport is concerned we support a variety of trucks (the `truck_*`
        methods). Our emission estimates assume diesel fuel and average load characteristics
        at the moment, unless a specific type says otherwise.

        ## Regional differences

        Truck types in North America and the rest of the world are categorized differently,
        therefore they're available here as distinct shipping methods. The North America
        trucks are prefixed with `truck_na_` while for the rest of the world it's just `truck_`.

        ## Truck sizes

        * Vans (`truck_generic_van`, `truck_na_van`) are under 3.5 tonnes GVW (Gross Vehicle Weight).
        * `truck_generic_urban` is between 3.5 and 7.5 tonnes GVW
        * `truck_generic_mgv` is betwen 7.5 and 20 tonnes
        * `truck_generic_hgv` is above 20 tonnes GVW

        For other truck types the GVW is either in the method name (like `truck_rigid_7_5t` which is
        up to 7.5 tonnes) or is not specified.

        ## Choosing the right truck type

        The are significant differences in emissions of different truck types. The more precisely
        you can declare what kind of truck you use, the better.

        If you only know a rough size of the truck you'll do well can choose one of the
        `truck_generic_*` types if outside North America.

        ## Truck fuels

        Suffixes such as `_petrol`, `_cng`, `_lpg`, `_lng`, `_bio_lng` indicate the vehicle uses a specific fuel.
        When no fuel is specified, assume diesel.

        ## Truck load characteristics

        Suffixes such as `_light_load`, `_heavy_load`, `_container` indicate the vehicle's load characteristics.
        When not specified, assume average/mixed load.

        # Rail transport

        You can explicitly request a US emission factor (`diesel_freight_train_us_average`)
        or a European one (`diesel_freight_train_eu_...`).

        There are multiple European emission factors for different load characteristics or different traction.
        When load characteristics or traction aren't known use `diesel_freight_train_eu_average`.

        For `diesel_freight_train_eu_truck_and_trailer` and
        `diesel_freight_train_eu_truck_trailer_only` the shipment size refers to the net load
        within the truck.

        # Air transport

        Lune supports two types of aircraft:
        * `cargo_plane` - freighter
        * `passenger_plane` - belly freight
        * `plane` - unknown

        `plane` uses a weighted average of cargo and passenger planes.

      enum:
        - inland_waterway_motor_vessel_extra_small
        - inland_waterway_motor_vessel_small
        - inland_waterway_motor_vessel_medium
        - inland_waterway_motor_vessel_large
        - inland_waterway_coupled_convoy
        - inland_waterway_pushed_convoy_small
        - inland_waterway_pushed_convoy_medium
        - inland_waterway_pushed_convoy_large
        - inland_waterway_tanker
        - inland_waterway_container_vessel_medium
        - inland_waterway_container_vessel_large
        - inland_waterway_container_vessel_convoy

        - diesel_freight_train
        - electric_freight_train

        - diesel_freight_train_us_average
        - diesel_freight_train_eu_average
        - diesel_freight_train_eu_container
        - diesel_freight_train_eu_cars
        - diesel_freight_train_eu_chemicals
        - diesel_freight_train_eu_coal_steel
        - diesel_freight_train_eu_building_materials
        - diesel_freight_train_eu_manufactured_products
        - diesel_freight_train_eu_cereals
        - diesel_freight_train_eu_truck_and_trailer
        - diesel_freight_train_eu_trailer_only

        - electric_freight_train_eu_average
        - electric_freight_train_eu_container
        - electric_freight_train_eu_cars
        - electric_freight_train_eu_chemicals
        - electric_freight_train_eu_coal_steel
        - electric_freight_train_eu_building_materials
        - electric_freight_train_eu_manufactured_products
        - electric_freight_train_eu_cereals
        - electric_freight_train_eu_truck_and_trailer
        - electric_freight_train_eu_trailer_only

        - diesel_truck
        - diesel_truck_refrigerated

        # EU/South America
        - truck_generic_van
        - truck_generic_urban
        - truck_generic_mgv
        - truck_generic_hgv

        - truck_rigid_7_5t
        - truck_rigid_12t
        - truck_rigid_20t
        - truck_rigid_26t
        - truck_rigid_32t

        - truck_articulated_34t
        - truck_articulated_40t
        - truck_articulated_44t
        - truck_articulated_60t
        - truck_articulated_72t

        - truck_generic_van_petrol
        - truck_generic_van_cng
        - truck_generic_van_lpg
        - truck_rigid_7_5t_cng
        - truck_rigid_12t_cng
        - truck_rigid_20t_cng
        - truck_rigid_26t_cng
        - truck_rigid_26t_lng

        - truck_articulated_44t_light_load
        - truck_articulated_44t_heavy_load
        - truck_articulated_44t_container
        - truck_articulated_60t_heavy_load
        - truck_articulated_60t_container
        - truck_articulated_72t_heavy_load
        - truck_articulated_72t_container

        - truck_articulated_40t_si_engine_lng_container
        - truck_articulated_40t_si_engine_cng
        - truck_articulated_40t_si_engine_bio_lng
        - truck_articulated_40t_si_engine_cng_container
        - truck_articulated_40t_si_engine_bio_lng_container
        - truck_articulated_40t_hpdi_lng_diesel
        - truck_articulated_40t_hpdi_cng_diesel
        - truck_articulated_40t_hpdi_bio_lng_diesel

        - truck_generic_van_electric
        - truck_rigid_7_5t_electric
        - truck_rigid_7_5t_electric_light_load
        - truck_rigid_12t_electric
        - truck_rigid_12t_electric_light_load
        - truck_rigid_20t_electric
        - truck_rigid_20t_electric_light_load
        - truck_rigid_40t_electric
        - truck_rigid_40t_electric_light_load

        - truck_generic_van_refrigerated
        - truck_generic_urban_refrigerated
        - truck_generic_mgv_refrigerated
        - truck_generic_hgv_refrigerated

        - truck_rigid_7_5t_refrigerated
        - truck_rigid_12t_refrigerated
        - truck_rigid_20t_refrigerated
        - truck_rigid_26t_refrigerated
        - truck_rigid_32t_refrigerated

        - truck_articulated_34t_refrigerated
        - truck_articulated_40t_refrigerated
        - truck_articulated_44t_refrigerated
        - truck_articulated_60t_refrigerated
        - truck_articulated_72t_refrigerated

        - truck_generic_van_petrol_refrigerated
        - truck_generic_van_cng_refrigerated
        - truck_generic_van_lpg_refrigerated
        - truck_rigid_7_5t_cng_refrigerated
        - truck_rigid_12t_cng_refrigerated
        - truck_rigid_20t_cng_refrigerated
        - truck_rigid_26t_cng_refrigerated
        - truck_rigid_26t_lng_refrigerated

        - truck_articulated_44t_light_load_refrigerated
        - truck_articulated_44t_heavy_load_refrigerated
        - truck_articulated_44t_container_refrigerated
        - truck_articulated_60t_heavy_load_refrigerated
        - truck_articulated_60t_container_refrigerated
        - truck_articulated_72t_heavy_load_refrigerated
        - truck_articulated_72t_container_refrigerated

        - truck_articulated_40t_si_engine_lng_container_refrigerated
        - truck_articulated_40t_si_engine_cng_refrigerated
        - truck_articulated_40t_si_engine_bio_lng_refrigerated
        - truck_articulated_40t_si_engine_cng_container_refrigerated
        - truck_articulated_40t_si_engine_bio_lng_container_refrigerated
        - truck_articulated_40t_hpdi_lng_diesel_refrigerated
        - truck_articulated_40t_hpdi_cng_diesel_refrigerated
        - truck_articulated_40t_hpdi_bio_lng_diesel_refrigerated

        - truck_generic_van_electric_refrigerated
        - truck_rigid_7_5t_electric_refrigerated
        - truck_rigid_7_5t_electric_light_load_refrigerated
        - truck_rigid_12t_electric_refrigerated
        - truck_rigid_12t_electric_light_load_refrigerated
        - truck_rigid_20t_electric_refrigerated
        - truck_rigid_20t_electric_light_load_refrigerated
        - truck_rigid_40t_electric_refrigerated
        - truck_rigid_40t_electric_light_load_refrigerated

        - truck_na_van
        - truck_na_general
        - truck_na_auto_carrier
        - truck_na_dray
        - truck_na_expedited
        - truck_na_flatbed
        - truck_na_heavy_bulk
        # Less-Than-Truckload
        - truck_na_dry_van_ltl
        # Truckload
        - truck_na_dry_van_tl
        - truck_na_mixed
        - truck_na_moving
        - truck_na_package
        - truck_na_refrigerated
        - truck_na_specialized
        - truck_na_tanker

        - plane
        - passenger_plane
        - cargo_plane
    SeaShippingMethod:
      oneOf:
        - $ref: '#/components/schemas/VariableFuelSeaShippingMethod'
        - $ref: '#/components/schemas/VariableFuelVariableLoadSeaShippingMethod'
        - $ref: '#/components/schemas/RoRoSeaShippingMethod'
        - $ref: '#/components/schemas/HugeOilTankerSeaShippingMethod'
    SimpleSeaShippingMethod:
      description: |
        ## Deadweight tonnage

        `dwkt` suffixes describe the ship's deadweight kilotonne upper bound, whereas `over_Xdwkt` suffixes describe lower bounds.

        ## Fuels

        Suffixes such as `_hfo` (Heavy fuel oil), `_vlsfo` (Very Low Sulphur Fuel Oil), `_mdo` (Marine diesel oil) describe the ship's fuel.
      type: string
      enum:
        - sea_bulk_carrier_10dwkt_hfo
        - sea_bulk_carrier_10dwkt_vlsfo
        - sea_bulk_carrier_10dwkt_mdo
        - sea_bulk_carrier_35dwkt_hfo
        - sea_bulk_carrier_35dwkt_vlsfo
        - sea_bulk_carrier_35dwkt_mdo
        - sea_bulk_carrier_60dwkt_hfo
        - sea_bulk_carrier_60dwkt_vlsfo
        - sea_bulk_carrier_60dwkt_mdo
        - sea_bulk_carrier_100dwkt_hfo
        - sea_bulk_carrier_100dwkt_vlsfo
        - sea_bulk_carrier_100dwkt_mdo
        - sea_bulk_carrier_200dwkt_hfo
        - sea_bulk_carrier_200dwkt_vlsfo
        - sea_bulk_carrier_200dwkt_mdo
        - sea_bulk_carrier_over_200dwkt_hfo
        - sea_bulk_carrier_over_200dwkt_vlsfo
        - sea_bulk_carrier_over_200dwkt_mdo

        - sea_chemical_tanker_5dwkt_hfo
        - sea_chemical_tanker_5dwkt_vlsfo
        - sea_chemical_tanker_5dwkt_mdo
        - sea_chemical_tanker_10dwkt_hfo
        - sea_chemical_tanker_10dwkt_vlsfo
        - sea_chemical_tanker_10dwkt_mdo
        - sea_chemical_tanker_20dwkt_hfo
        - sea_chemical_tanker_20dwkt_vlsfo
        - sea_chemical_tanker_20dwkt_mdo
        - sea_chemical_tanker_40dwkt_hfo
        - sea_chemical_tanker_40dwkt_vlsfo
        - sea_chemical_tanker_40dwkt_mdo
        - sea_chemical_tanker_over_40dwkt_hfo
        - sea_chemical_tanker_over_40dwkt_vlsfo
        - sea_chemical_tanker_over_40dwkt_mdo

        - sea_general_cargo_5dwkt_hfo
        - sea_general_cargo_5dwkt_vlsfo
        - sea_general_cargo_5dwkt_mdo
        - sea_general_cargo_10dwkt_hfo
        - sea_general_cargo_10dwkt_vlsfo
        - sea_general_cargo_10dwkt_mdo
        - sea_general_cargo_20dwkt_hfo
        - sea_general_cargo_20dwkt_vlsfo
        - sea_general_cargo_20dwkt_mdo
        - sea_general_cargo_over_20dwkt_hfo
        - sea_general_cargo_over_20dwkt_vlsfo
        - sea_general_cargo_over_20dwkt_mdo

        - sea_liquefied_gas_tanker_50dwkt_hfo
        - sea_liquefied_gas_tanker_50dwkt_vlsfo
        - sea_liquefied_gas_tanker_50dwkt_mdo
        - sea_liquefied_gas_tanker_100dwkt_hfo
        - sea_liquefied_gas_tanker_100dwkt_vlsfo
        - sea_liquefied_gas_tanker_100dwkt_mdo
        - sea_liquefied_gas_tanker_200dwkt_hfo
        - sea_liquefied_gas_tanker_200dwkt_vlsfo
        - sea_liquefied_gas_tanker_200dwkt_mdo
        - sea_liquefied_gas_tanker_over_200dwkt_hfo
        - sea_liquefied_gas_tanker_over_200dwkt_vlsfo
        - sea_liquefied_gas_tanker_over_200dwkt_mdo

        - sea_oil_tanker_5dwkt_hfo
        - sea_oil_tanker_5dwkt_vlsfo
        - sea_oil_tanker_5dwkt_mdo
        - sea_oil_tanker_10dwkt_hfo
        - sea_oil_tanker_10dwkt_vlsfo
        - sea_oil_tanker_10dwkt_mdo
        - sea_oil_tanker_20dwkt_hfo
        - sea_oil_tanker_20dwkt_vlsfo
        - sea_oil_tanker_20dwkt_mdo
        - sea_oil_tanker_60dwkt_hfo
        - sea_oil_tanker_60dwkt_vlsfo
        - sea_oil_tanker_60dwkt_mdo
        - sea_oil_tanker_80dwkt_hfo
        - sea_oil_tanker_80dwkt_vlsfo
        - sea_oil_tanker_80dwkt_mdo
        - sea_oil_tanker_112dwkt_hfo
        - sea_oil_tanker_112dwkt_vlsfo
        - sea_oil_tanker_112dwkt_mdo
        - sea_oil_tanker_200dwkt_hfo
        - sea_oil_tanker_200dwkt_vlsfo
        - sea_oil_tanker_200dwkt_mdo
        - sea_oil_tanker_over_200dwkt_hfo
        - sea_oil_tanker_over_200dwkt_vlsfo
        - sea_oil_tanker_over_200dwkt_mdo

        - sea_other_liquids_tanker_1dwkt_hfo
        - sea_other_liquids_tanker_1dwkt_vlsfo
        - sea_other_liquids_tanker_1dwkt_mdo
        - sea_other_liquids_tanker_over_1dwkt_hfo
        - sea_other_liquids_tanker_over_1dwkt_vlsfo
        - sea_other_liquids_tanker_over_1dwkt_mdo

        - sea_ropax_2dwkt_hfo
        - sea_ropax_2dwkt_vlsfo
        - sea_ropax_2dwkt_mdo
        - sea_ropax_5dwkt_hfo
        - sea_ropax_5dwkt_vlsfo
        - sea_ropax_5dwkt_mdo
        - sea_ropax_10dwkt_hfo
        - sea_ropax_10dwkt_vlsfo
        - sea_ropax_10dwkt_mdo
        - sea_ropax_20dwkt_hfo
        - sea_ropax_20dwkt_vlsfo
        - sea_ropax_20dwkt_mdo
        - sea_ropax_over_20dwkt_hfo
        - sea_ropax_over_20dwkt_vlsfo
        - sea_ropax_over_20dwkt_mdo

        - sea_refrigerated_bulk_carrier_2dwkt_hfo
        - sea_refrigerated_bulk_carrier_2dwkt_vlsfo
        - sea_refrigerated_bulk_carrier_2dwkt_mdo
        - sea_refrigerated_bulk_carrier_6dwkt_hfo
        - sea_refrigerated_bulk_carrier_6dwkt_vlsfo
        - sea_refrigerated_bulk_carrier_6dwkt_mdo
        - sea_refrigerated_bulk_carrier_10dwkt_hfo
        - sea_refrigerated_bulk_carrier_10dwkt_vlsfo
        - sea_refrigerated_bulk_carrier_10dwkt_mdo
        - sea_refrigerated_bulk_carrier_over_10dwkt_hfo
        - sea_refrigerated_bulk_carrier_over_10dwkt_vlsfo
        - sea_refrigerated_bulk_carrier_over_10dwkt_mdo

        - sea_roro_5dwkt_hfo
        - sea_roro_5dwkt_vlsfo
        - sea_roro_5dwkt_mdo
        - sea_roro_10dwkt_hfo
        - sea_roro_10dwkt_vlsfo
        - sea_roro_10dwkt_mdo
        - sea_roro_15dwkt_hfo
        - sea_roro_15dwkt_vlsfo
        - sea_roro_15dwkt_mdo
        - sea_roro_over_15dwkt_hfo
        - sea_roro_over_15dwkt_vlsfo
        - sea_roro_over_15dwkt_mdo

        - sea_vehicle_carrier_30dwkt_hfo
        - sea_vehicle_carrier_30dwkt_vlsfo
        - sea_vehicle_carrier_30dwkt_mdo
        - sea_vehicle_carrier_50dwkt_hfo
        - sea_vehicle_carrier_50dwkt_vlsfo
        - sea_vehicle_carrier_50dwkt_mdo
        - sea_vehicle_carrier_over_50dwkt_hfo
        - sea_vehicle_carrier_over_50dwkt_vlsfo
        - sea_vehicle_carrier_over_50dwkt_mdo

    VariableFuelSeaShippingMethod:
      type: object
      required:
        - vessel_type
      properties:
        vessel_type:
          type: string
          description: |
            Vessel sizes:
            * `sea_oil_tanker_*`:
              * `small` – <5 dwkt
              * `medium` – 20-60 dwkt
              * `large` – 112-200 dwkt
            * `sea_general_cargo_*`:
              * `small` – 5-10 dwkt
              * `large` – 10-20 dwkt
            * `sea_bulk_carrier_small` - <10 dwkt
            * `sea_ropax` – 2-5 dwkt
          enum:
            - sea_oil_tanker_small
            - sea_oil_tanker_medium
            - sea_oil_tanker_large
            - sea_general_cargo_small
            - sea_general_cargo_large
            - sea_bulk_carrier_small
            - sea_ropax
        fuel:
          type: string
          enum:
            - HFO
            - MGO
    VariableFuelVariableLoadSeaShippingMethod:
      type: object
      required:
        - vessel_type
      properties:
        vessel_type:
          type: string
          description: |
            Vessel sizes:
            * `sea_bulk_carrier_*`
              * `medium` – 60-100 dwkt
              * `large` – 100-200 dwkt
          enum:
            - sea_bulk_carrier_medium
            - sea_bulk_carrier_large
        fuel:
          type: string
          enum:
            - HFO
            - MGO
        load:
          type: string
          enum:
            - average
            - heavy
    RoRoSeaShippingMethod:
      type: object
      x-lune-name: RoRo sea shipping method
      required:
        - vessel_type
      properties:
        vessel_type:
          type: string
          enum:
            - sea_roro
        fuel:
          type: string
          enum:
            - HFO
            - MGO
        load:
          type: string
          description: |
            Vessel sizes:
            * `freight_only` - Ro-Ro 5-10 dwkt
            * `truck_and_trailer` - Ro-Ro <5 dwkt
            * `trailer_only` - Ro-Ro 5-10 dwkt
          enum:
            - freight_only
            - truck_and_trailer
            - trailer_only
    HugeOilTankerSeaShippingMethod:
      type: object
      required:
        - vessel_type
      properties:
        vessel_type:
          type: string
          description: Oil tanker >200 dwkt
          enum:
            - sea_oil_tanker_huge
        fuel:
          type: string
          enum:
            - HFO
            - MGO
            - LNG
    ContainerShippingMethod:
      type: object
      additionalProperties: false
      required:
        - vessel_type
      properties:
        vessel_type:
          type: string
          enum:
            - container_ship
        refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: boolean
          default: false
        trade_lane:
          type: string
          description: |
            Container transport emissions vary per trade lane. When a trade lane is not given we'll
            use an industry-wide average. Providing an `aggregated_*` trade lane group will result in an
            a more accurate estimate. Providing an `disaggregated_*` trade lane will result in the best
            estimate precision.

            The identifiers are kept relatively short for brevity: Mediterranean includes Black Sea and
            South America includes Central America.

            The trade lanes are bidirectional, for example `disaggregated_asia_to_africa` covers both
            Asia to Africa and Africa to Asia.
          enum:
            - aggregated_panama_trade
            - aggregated_transatlantic
            - aggregated_transsuez
            - aggregated_transpacific
            - aggregated_other

            - disaggregated_asia_to_africa
            - disaggregated_asia_to_mediterranean
            - disaggregated_asia_to_middle_east
            - disaggregated_asia_to_north_america_east
            - disaggregated_asia_to_north_america_west
            - disaggregated_asia_to_north_europe
            - disaggregated_asia_to_oceania
            - disaggregated_asia_to_south_america
            - disaggregated_europe_to_africa
            - disaggregated_europe_to_south_america
            - disaggregated_europe_to_middle_east
            - disaggregated_europe_to_oceania
            - disaggregated_mediterranean_to_north_america_east
            - disaggregated_mediterranean_to_north_america_west
            - disaggregated_north_america_to_africa
            - disaggregated_north_america_to_oceania
            - disaggregated_north_america_to_south_america
            - disaggregated_north_america_to_middle_east
            - disaggregated_north_europe_to_north_america_east
            - disaggregated_north_europe_to_north_america_west
            - disaggregated_south_america_to_africa
            - disaggregated_intra_africa
            - disaggregated_intra_north_america
            - disaggregated_intra_south_america
            - disaggregated_se_asia_to_ne_asia
            - disaggregated_intra_ne_asia
            - disaggregated_intra_se_asia
            - disaggregated_north_europe_to_mediterranean
            - disaggregated_intra_mediterranean
            - disaggregated_intra_north_europe
            - disaggregated_intra_middle_east
            - disaggregated_other
    IdentifiedVesselShippingMethod:
      description: |
        This method uses either the vessel's IMO number or the vessel name in order to select an emission factor, falling back to trade lane emissions factors if provided.

        If vessel tracking is to be used the `vessel_tracking` data needs to be provided.
      allOf:
        - oneOf:
          - $ref: '#/components/schemas/IdentifiedVesselByIMOShippingMethod'
          - $ref: '#/components/schemas/IdentifiedVesselByNameShippingMethod'
        - type: object
          properties:
            vessel_tracking:
              type: object
              required:
                - departure_on
                - arrival_on
              properties:
                departure_on:
                  description: |
                    The date of the departure from the source port in UTC time zone.

                    Vessel tracking is only available for departures within the past 3 months.
                  type: string
                  format: date
                arrival_on:
                  description: |
                    The date of the arrival to the destination port in UTC time zone.

                    We can only perform vessel tracking for shipments that finished more than
                    24 hours ago.
                  type: string
                  format: date
                mmsi_number:
                  description: |
                    The vessel's MMSI number at the time of arrival to the destination port.

                    Optional but can help with identifying the vessel to track if provided.
                  type: string
                  pattern: '^[0-9]{9}$'
    IdentifiedVesselByIMOShippingMethod:
      description: |
        This method uses the vessel's IMO number emission factors when found, falling back to trade lane emissions factors if provided.
      oneOf:
        - type: object
          x-lune-name: Vessel IMO
          required:
            - vessel_imo_number
          properties:
            vessel_imo_number:
              description: |
                The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.
              type: string
              pattern: '^[0-9]{7}$'
        - x-lune-name: Container ship IMO
          allOf:
          - type: object
            required:
              - vessel_imo_number
            properties:
              vessel_imo_number:
                description: |
                  The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.
                type: string
                pattern: '^[0-9]{7}$'
          - $ref: '#/components/schemas/ContainerShippingMethod'
    IdentifiedVesselByNameShippingMethod:
      description: |
        This method uses the vessel's name to select an emission factors, falling back to trade lane emissions factors if provided. If the vessel name matches
        multiple vessels with different IMO's or no vessel at all, the fallback is used.
      oneOf:
        - type: object
          x-lune-name: Vessel Name
          required:
            - vessel_name
          properties:
            vessel_name:
              description: |
                The vessel's name, case-insensitive.
              type: string
        - x-lune-name: Container ship vessel name
          allOf:
          - type: object
            required:
              - vessel_name
            properties:
              vessel_name:
                description: |
                  The vessel's name.
                type: string
          - $ref: '#/components/schemas/ContainerShippingMethod'
    LogisticsSiteMethod:
      type: string
      description: |
        Logistics sites are locations where goods are stored, repacked and distributed.
      enum:
        - maritime_container_terminal
        - maritime_container_terminal_ambient
        - maritime_container_terminal_chilled
        - transhipment_site_ambient
        - transhipment_site_chilled
        - transhipment_site_mixed
        - storage_and_transhipment_ambient
        - storage_and_transhipment_chilled
        - storage_and_transhipment_mixed
        - warehouse_ambient
        - warehouse_chilled
        - warehouse_mixed
        - liquid_bulk_terminals_ambient
        - liquid_bulk_terminals_mixed
    AirportSourceDestination:
      type: object
      x-lune-name: Source and destination
      required:
        - source
        - destination
      properties:
        source:
          $ref: '#/components/schemas/AirportCode'
        destination:
          $ref: '#/components/schemas/AirportCode'
    AirportCode:
      type: object
      oneOf:
          - $ref: '#/components/schemas/IATACode'
          - $ref: '#/components/schemas/ICAOCode'
    IATACode:
      x-lune-name: IATA code
      type: object
      required:
          - code
      properties:
        code:
          type: string
          pattern: ^[A-Z]{3}$
          description: Airport IATA code. For a full list of options (https://openflights.org/data.html)
          example: OPO
    ICAOCode:
      type: object
      x-lune-name: ICAO code
      required:
          - code
      properties:
        code:
          type: string
          pattern: ^[A-Z]{4}[A-Z]?$
          description: Airport ICAO code. For a full list of options (https://openflights.org/data.html)
          example: LPPR
    Locode:
      type: object
      required:
          - locode
      properties:
        locode:
          type: string
          pattern: ^[A-Z]{5}$
          description: UN LOCODE. For a full list of options (https://unece.org/trade/cefact/unlocode-code-list-country-and-territory)
          example: ESBCN
    ShippingSourceDestination:
      type: object
      x-lune-name: Source and destination
      required:
        - source
        - destination
      properties:
        source:
          oneOf:
            - $ref: '#/components/schemas/Address'
            - $ref: '#/components/schemas/GeographicCoordinates'
            - $ref: '#/components/schemas/Locode'
            - $ref: '#/components/schemas/AirportCode'
        destination:
          oneOf:
            - $ref: '#/components/schemas/Address'
            - $ref: '#/components/schemas/GeographicCoordinates'
            - $ref: '#/components/schemas/Locode'
            - $ref: '#/components/schemas/AirportCode'
    SourceDestination:
      type: object
      x-lune-name: Source and destination
      required:
        - source
        - destination
      properties:
        source:
          oneOf:
            - $ref: '#/components/schemas/Address'
            - $ref: '#/components/schemas/GeographicCoordinates'
        destination:
          oneOf:
            - $ref: '#/components/schemas/Address'
            - $ref: '#/components/schemas/GeographicCoordinates'
    Address:
      description: |
        Detailed information about an address.

        Even though though `street_line1`, `postcode`, `city` are optional properties, the more details
        you provide, the more likely we are able to resolve the address to its intended location.

        Note: only `postcode` is guaranteed to be unique for a country.
      type: object
      required:
        - country_code
      properties:
        street_line1:
          type: string
          description: A street and house number (or equivalent).
          example: "1 Hollow Road"
        street_line2:
          type: string
          description: An address component more precise than a street and house number.
          example: "Apartment 2"
        postcode:
          type: string
          example: "99 210"
          description: The postal code in the format specific to the country it's in
        city:
          type: string
          example: "Ledville"
        country_code:
          type: string
          example: "GBR"
          description: A three-letter country code.
    GeographicCoordinates:
      type: object
      required:
        - lat
        - lon
      properties:
        lat:
          description: Latitude
          type: number
          minimum: -90.0
          maximum: 90.0
          example: 43.8657
        lon:
          description: Longitude
          type: number
          minimum: -180.0
          maximum: 180.0
          example: 10.2513
    BatchTransactionEstimateRequest:
      type: array
      description: An array of transaction estimate requests.
      items:
        $ref: '#/components/schemas/TransactionEstimateRequest'
        minItems: 1
        maxItems: 100
      example:
        - value:
            value: '8.99'
            currency: 'USD'
          merchant:
            category_code: '5411'
            name: 'Starbucks'
            country_code: 'USA'
        - value:
            value: '120'
            currency: 'USD'
          merchant:
            category_code: '3001'
            name: 'British Airways'
            country_code: 'USA'
        - value:
            value: '8.99'
            currency: 'USD'
          merchant:
            category_code: '5818'
            name: 'Netflix'
            country_code: 'USA'
    TransactionEstimateRequest:
      type: object
      description: Parameters for estimating emissions associated with purchasing goods or services.
      required:
        - value
        - merchant
      properties:
        name:
          description: A name to reference this calculation.
          type: string
        value:
          description: Monetary value of the transaction. This should exclude shipping and taxes.
          $ref: '#/components/schemas/MonetaryAmount'
        merchant:
          description: Merchant from whom the goods or services the purchase was made
          $ref: '#/components/schemas/Merchant'
        diet:
          description: Individual diet. Used to better estimate  food-related purchases.
          $ref: '#/components/schemas/Diet'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
        metadata:
          $ref: '#/components/schemas/Metadata'
        idempotency_key:
          $ref: '#/components/schemas/EstimateIdempotencyKey'
        is_transaction:
          type: boolean
          description: |
            When true, the emission estimate refers to an actual transaction for goods or services and will be included in Lune analytics and can be included in any CO2 emissions reporting.

            This property exists to distinguish generic estimates, quotes or forecasts from actual transactions that have occured.

            You can mark an estimate as transaction at any time.
          example: false
      example:
        value:
          value: '8.99'
          currency: 'USD'
        merchant:
          category_code: '5818'
          name: 'Netflix'
          country_code: 'USA'
    UpdateTransactionEstimateAnnotationsRequest:
      type: object
      properties:
        is_transaction:
          type: boolean
          description: |
            When true, the emission estimate refers to an actual transaction for goods or services and will be included in Lune analytics and can be included in any CO2 emissions reporting.

            This property exists to distinguish generic estimates, quotes or forecasts from actual transactions that have occured.

            You can mark an estimate as transaction at any time.
          example: false
        metadata:
          $ref: '#/components/schemas/Metadata'
        idempotency_key:
          $ref: '#/components/schemas/EstimateIdempotencyKey'
      example:
        is_transaction: true
        metadata:
          user_id: u-38925d
    CompanyEstimateRequest:
      description: |
        Parameters for estimating emissions associated with operating a company.

        All relevant values are yearly values.
      type: object
      required:
        - employees
        - remote_employees_percentage
        - office_area
        - country_code
        - electricity_consumption
        - green_electricity_used
        - gas_consumption
        - company_cars
        - average_car_distance_travelled
        - employees_using_public_transport
        - short_flights
        - medium_flights
        - long_flights
        - first_or_business_class_percentage
        - food_and_drinks_expenses
        - vegetarian_and_vegan_percentage
        - electronic_device_expenses
        - garbage
        - recycled_garbage_percentage
      properties:
        months:
          type: integer
          description: Number of months covered by the emission estimate
          minimum: 1
          default: 12
        employees:
          type: integer
          description: Number of employees
          minimum: 0
        remote_employees_percentage:
          description: Share of employees working remotely (in percent)
          $ref: '#/components/schemas/IntegerPercentage'
        office_area:
          $ref: '#/components/schemas/Area'
          description: Office area in square meters
        country_code:
          type: string
          description: The three-letter country code of the country where the company is located.
          example:  GBR
        postcode:
          type: string
          example: "99 210"
          description: The company's postal code
        city:
          type: string
          example: "Ledville"
        electricity_consumption:
          type: integer
          description: Electricity consumption in kWh
          minimum: 0
        green_electricity_used:
          type: boolean
          description: Is the electricity provided by renewable source(s)?
        gas_consumption:
          type: integer
          description: Yearly natural gas consumption in cubic meters
          minimum: 0
        company_cars:
          type: integer
          description: Company cars
          minimum: 0
        average_car_distance_travelled:
          $ref: '#/components/schemas/Distance'
          description: Average yearly distance travelled per car
        employees_using_public_transport:
          type: integer
          description: Number of employees commuting by public transport
          minimum: 0
        short_flights:
          type: integer
          description: Number of short (under 3 hours) flights per year
          minimum: 0
        medium_flights:
          type: integer
          description: Number of medium (between 3 and 6 hours) flights per year
          minimum: 0
        long_flights:
          type: integer
          description: Number of long (over 6 hours) flights per year
          minimum: 0
        first_or_business_class_percentage:
          description: Share of business or first class flights, in percent
          $ref: '#/components/schemas/IntegerPercentage'
        food_and_drinks_expenses:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Amount spend on food and drinks
        vegetarian_and_vegan_percentage:
          description: Share of vegetarians or vegans in the company, in percent
          $ref: '#/components/schemas/IntegerPercentage'
        electronic_device_expenses:
          $ref: '#/components/schemas/MonetaryAmount'
          description: New electronic devices (laptops, monitors, etc.) expenses
        garbage:
          type: integer
          description: The amount of garbage produced, in kilograms
          minimum: 0
        recycled_garbage_percentage:
          description: Share of recycled garbage, in percent
          $ref: '#/components/schemas/IntegerPercentage'
        tech:
          type: object
          properties:
            on_premise:
              $ref: '#/components/schemas/CompanyOnPremiseUse'
            cloud:
              $ref: '#/components/schemas/CompanyCloudUse'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
        name:
          description: A name to reference this calculation.
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        idempotency_key:
          $ref: '#/components/schemas/EstimateIdempotencyKey'
    CompanyCloudUse:
      type: object
      description: Company's use of cloud services
      required:
        - cost
        - provider
      properties:
        cost:
          $ref: '#/components/schemas/MonetaryAmount'
        provider:
          $ref: '#/components/schemas/CloudProvider'
    CompanyOnPremiseUse:
      type: object
      description: Company's own tech infrastructure details
      required:
        - electricity_cost
      properties:
        electricity_cost:
          $ref: '#/components/schemas/MonetaryAmount'
    CloudProvider:
      type: string
      description: The identifier of a cloud provider.
      example: aws
      enum:
        - aws
        - gcp
        - azure
        - ovh
        - other
    IntegerPercentage:
      type: integer
      minimum: 0
      maximum: 100
    Merchant:
      allOf:
        - type: object
          required:
            - country_code
          properties:
            name:
              type: string
              description: The name of the merchant.
              example: The Corner Store
            country_code:
              type: string
              description: The three-letter code of the merchant's country.
              example:  GBR
        - oneOf:
          - type: object
            x-lune-name: Merchant category code
            required:
              - category_code
            properties:
              category_code:
                type: string
                description: |
                  An ISO 18245 Merchant Category Code (leading zeros need to be preserved) corresponding
                  to the transaction.

                  See https://github.com/greggles/mcc-codes for available codes.
                example: "0763"
          - type: object
            x-lune-name: Search
            required:
              - search_term
            properties:
              search_term:
                type: string
                minLength: 1
                description: |
                  The search term to query.
                  Search is resolved using a combination of semantic and keyword searching.
                example: Bananas
    Diet:
      description: |
        A diet followed by an individual.

        High meat-eater is someone consuming over 100 grams of meat per day, medium is 50-99 grams per day
        and low is less than 50 grams per day. A fish eater is someone that doesn't consume meat other than
        fish.
      type: string
      enum:
        - high_meat_eater
        - medium_meat_eater
        - low_meat_eater
        - fish_eater
        - vegetarian
        - vegan
    EmissionEstimate:
      description: An emission estimate result. The value returned is in CO2e – it accounts for both CO2 and non-CO2 emissions.
      type: object
      required:
        - mass
      properties:
        mass:
          $ref: '#/components/schemas/Mass'
        metadata:
          $ref: '#/components/schemas/Metadata'
        idempotency_key:
          $ref: '#/components/schemas/EstimateIdempotencyKey'
    EmissionEstimateResponse:
      description: An emission estimate result including a quote
      allOf:
        - $ref: '#/components/schemas/EmissionEstimate'
        - type: object
          required:
            - id
            - quote
          properties:
            id:
              type: string
              description: The emission calculation unique identifier
              example: '90ng23MKvLqbkpMwMw7yMBD4wJQrV6O6'
            quote:
              $ref: '#/components/schemas/EstimateQuote'
    ElectricityEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/EmissionEstimateResponse'
        - type: object
          required:
            - request
          properties:
            request:
              $ref: '#/components/schemas/ElectricityEstimateRequest'
    FlightEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/EmissionEstimateResponse'
        - type: object
          required:
            - request
          properties:
            request:
              $ref: '#/components/schemas/FlightEstimateRequest'
    BatchTransactionEmissionEstimate:
      type: array
      description: |
        An array representing multiple transaction emission estimates.

        Returned in the same order as the request.
      items:
        oneOf:
          - $ref: '#/components/schemas/TransactionEmissionEstimate'
          - $ref: '#/components/schemas/ErrorResponse'
          - $ref: '#/components/schemas/EmptyObject'
      example:
        - id: '08QD7GPaBx5b6Y6mJlWyONXLvrZljRE2'
          mass:
            amount: '0.01388'
            unit: 't'
          quote:
            estimated_quantity: '0.01388'
            estimated_commission: '0.04'
            estimated_total_cost: '0.38'
            estimated_offset_cost: '0.34'
            requested_value: null
            requested_quantity: '0.01388'
            currency: 'USD'
            bundles:
              - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
                bundle_name: 'Conserving forests in Asia'
                quantity: '0.013186'
                unit_price: '12.8'
                gross_unit_price: '14.22'
                offset_cost: '0.17'
                insufficient_available_quantity: null
              - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
                bundle_name: 'Ocean Carbon Removal'
                quantity: '14.22'
                unit_price: '250'
                gross_unit_price: '277.78'
                offset_cost: '0.17'
                insufficient_available_quantity: null
          request:
            value:
              value: '8.99'
              currency: 'USD'
            merchant:
              category_code: '5411'
              name: 'Starbucks'
              country_code: 'USA'
        - id: '02QD7GPaBx5b6Y6mJlZyONXLvrZljRE2'
          mass:
            amount: '0.22179'
            unit: 't'
          quote:
            estimated_quantity: '0.221789'
            estimated_commission: '0.61'
            estimated_total_cost: '5.99'
            estimated_offset_cost: '5.38'
            requested_value: null
            requested_quantity: '0.22179'
            currency: 'USD'
            bundles:
              - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
                bundle_name: 'Conserving forests in Asia'
                quantity: '0.2107'
                unit_price: '12.41'
                gross_unit_price: '13.79'
                offset_cost: '2.62'
                insufficient_available_quantity: null
              - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
                bundle_name: 'Ocean Carbon Removal'
                quantity: '0.011089'
                unit_price: '250'
                gross_unit_price: '277.78'
                offset_cost: '2.78'
                insufficient_available_quantity: null
          request:
            value:
              value: '120'
              currency: 'USD'
            merchant:
              category_code: '3001'
              name: ''
              country_code: 'USA'
        - id: '04QD7GPaBx5b6Y6mJlZyONXLvrZljRE2'
          mass:
            amount: '0.01388'
            unit: 't'
          quote:
            estimated_quantity: '0.01388'
            estimated_commission: '0.04'
            estimated_total_cost: '0.38'
            estimated_offset_cost: '0.34'
            requested_value: null
            requested_quantity: '0.01388'
            currency: 'USD'
            bundles:
              - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
                bundle_name: 'Conserving forests in Asia'
                quantity: '0.013186'
                unit_price: '12.8'
                gross_unit_price: '14.22'
                offset_cost: '0.17'
                insufficient_available_quantity: null
              - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
                bundle_name: 'Ocean Carbon Removal'
                quantity: '14.22'
                unit_price: '250'
                gross_unit_price: '277.78'
                offset_cost: '0.17'
                insufficient_available_quantity: null
          request:
            value:
              value: '8.99'
              currency: 'USD'
            merchant:
              category_code: '5818'
              name: 'Netflix'
              country_code: 'USA'
    TransactionEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/EmissionEstimateResponse'
        - type: object
          required:
            - request
            - emission_factor
            - diet_factor
            - exchange_rate
            - exchange_rate_date
            - is_transaction
          properties:
            request:
              $ref: '#/components/schemas/TransactionEstimateRequest'
            emission_factor:
              description: This property is `null` for any estimate created before 01/03/2024
              oneOf:
                - $ref: '#/components/schemas/EmissionFactorWithGasEmissions'
                - $ref: '#/components/schemas/NullEnum'
            search_term_match:
              type: string
              description: |
                The most accurate term matching the search.

                The emission factor for this term is used to compute the emission estimate.
            diet_factor:
              oneOf:
                - x-lune-name: Diet factor
                  type: string
                  description: The diet factor that was applied to the emission factor.
                  example: '0.6495'
                  pattern: '^[0-9]+(\.[0-9]+)?$'
                - $ref: '#/components/schemas/NullEnum'
            exchange_rate:
              oneOf:
                - x-lune-name: Exchange rate
                  type: string
                  description: |
                   The exchange rate that was used to convert from the requested currency to the Emission Factor currency.

                   For example, if the transaction was for £200, multiply by the exchange factor (1.1686 EUR / GBP)
                   to obtain the value (€233.72) in the Emission Factor's currency.
                  example: '0.2667'
                  pattern: '^[0-9]+(\.[0-9]+)?$'
                - $ref: '#/components/schemas/NullEnum'
            exchange_rate_date:
              oneOf:
                - x-lune-name: Exchange rate date
                  type: string
                  description: Date the exchange rate was taken.
                  example: '2024-01-01'
                  format: date
                - $ref: '#/components/schemas/NullEnum'
            is_transaction:
              oneOf:
                - x-lune-name: Is transaction
                  type: boolean
                  description: |
                    When true, the emission estimate refers to an actual transaction for goods or services and will be included in Lune analytics and can be included in any CO2 emissions reporting.

                    This property exists to distinguish generic estimates, quotes or forecasts from actual transactions that have occured.

                    You can mark an estimate as transaction at any time.
                  example: false
                - $ref: '#/components/schemas/NullEnum'
      example:
        id: '04QD7GPaBx5b6Y6mJlZyONXLvrZljRE2'
        mass:
          amount: '0.01388'
          unit: 't'
        quote:
          estimated_quantity: '0.01388'
          estimated_commission: '0.04'
          estimated_total_cost: '0.38'
          estimated_offset_cost: '0.34'
          requested_value: null
          requested_quantity: '0.01388'
          currency: 'USD'
          bundles:
            - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
              bundle_name: 'Conserving forests in Asia'
              quantity: '0.013186'
              unit_price: '12.8'
              gross_unit_price: '14.22'
              offset_cost: '0.17'
              insufficient_available_quantity: null
            - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
              bundle_name: 'Ocean Carbon Removal'
              quantity: '14.22'
              unit_price: '250'
              gross_unit_price: '277.78'
              offset_cost: '0.17'
              insufficient_available_quantity: null
        request:
          value:
            value: '8.99'
            currency: 'USD'
          merchant:
            category_code: '5818'
            name: 'Netflix'
            country_code: 'USA'
        diet_factor: null
        exchange_rate: '0.2667'
        exchange_rate_date: '2024-01-01'
    SingleShippingEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/ShippingLegEmissionEstimate'
        - type: object
          required:
            - id
            - is_shipment
            - shipped_at
            - quote
            - request
          properties:
            id:
              type: string
              description: The emission calculation unique identifier
              example: '90ng23MKvLqbkpMwMw7yMBD4wJQrV6O6'
            is_shipment:
              type: boolean
              description: |
                When true, the emission estimate refers to an actual shipment of goods, will be included in Lune analytics and can be included in any CO2 emissions reporting.

                This property exists to distinguish booking quotes or forecasts from actual shipments where goods are moved.

                You can mark an estimate as shipment at any time.
              example: false
            shipped_at:
              $ref: '#/components/schemas/ShippedAt'
            quote:
              $ref: '#/components/schemas/EstimateQuote'
            request:
              $ref: '#/components/schemas/ShippingEstimateRequest'
            metadata:
              $ref: '#/components/schemas/Metadata'
      example:
        id: '08QD7GPaBx5b6Y6mJlWyONXLvrZljRE2'
        is_shipment: true
        shipped_at: '2023-11-20T10:20:30Z'
        mass:
          amount: '2.969503'
          unit: 't'
        quote:
          estimated_quantity: '2.969502'
          estimated_commission: '8.03'
          estimated_total_cost: '80.18'
          estimated_offset_cost: '72.15'
          requested_value: null
          requested_quantity: '2.969503'
          currency: 'USD'
          bundles:
            - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
              bundle_name: 'Conserving forests in Asia'
              quantity: '2.821027'
              unit_price: '12.42'
              gross_unit_price: '13.8'
              offset_cost: '35.04'
              insufficient_available_quantity: null
            - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
              bundle_name: 'Ocean Carbon Removal'
              quantity: '0.148475'
              unit_price: '250'
              gross_unit_price: '277.78'
              offset_cost: '37.12'
              insufficient_available_quantity: null
        distance:
          amount: '22466.6346'
          unit: 'km'
        methodology: []
        request:
          shipment:
            containers: '2'
          route:
            source:
              locode: 'CNSGH'
            destination:
              locode: 'NLRTM'
          method:
            vessel_type: 'container_ship'
    BaseShippingLegEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/EmissionEstimate'
        - type: object
          required:
            - methodology
            - distance_calculation_method
            - distance_calculation_details
            - route
            - emission_factor
          properties:
            distance:
              $ref: '#/components/schemas/Distance'
            adjusted_distance:
              $ref: '#/components/schemas/AdjustedDistance'
            distance_calculation_method:
              description: |
                The method we used to determine the shipping distance.

                `null` in case of logistics sites or if several resolved legs are presented.
              oneOf:
                - $ref: '#/components/schemas/DistanceCalculationMethod'
                - $ref: '#/components/schemas/NullEnum'
            distance_calculation_details:
              description: |
                Information regarding why an alternative distance calculation method was used.
                `null` in case several resolved legs are presented.
              oneOf:
                - $ref: '#/components/schemas/DistanceCalculationDetails'
                - $ref: '#/components/schemas/NullEnum'
            route:
              description: |
                The shipping route.

                `null` in case of logistics sites and situations where the concept of
                a route doesn't make sense or we're unable to return the route. That
                includes the following situations at the moment:

                * Routes where source or destination is an address (or both are).
                * Most land and inland waterways routes.
                * The actual distance value was provided by the user.
                * The emission estimate was created before 2023-09-22.
              oneOf:
                - $ref: '#/components/schemas/CalculatedRoute'
                - $ref: '#/components/schemas/NullEnum'
            emission_factor:
              $ref: '#/components/schemas/EmissionFactorWithGasEmissions'
            methodology:
              type: array
              description: |
                Summary of the methodology used to calculate emissions or any value which is a prerequisite.

                `imo_unavailable_container_ship_fallback`: the vessel IMO was not found, therefore a generic container ship emission factor has been used.
              items:
                type: string
                enum:
                  - imo_unavailable_container_ship_fallback
                  - imo_unavailable_container_ship_trade_lane_fallback
            methodology_details:
              description: Details regarding the internal methodology parameters and calculations.
              type: object
              properties:
                flight:
                  description: Freight flight methodology details.
                  required:
                    - aircraft_name
                    - aircraft_configuration
                    - aircraft_capacity_tonnes
                    - load_factor
                    - flight_fuel_consumed_tonnes
                    - distance_adjustment_factor
                    - emission_share
                  properties:
                    aircraft_name:
                      description: Name of the identified aircraft
                      type: string
                    aircraft_configuration:
                      description: Configuration of the aircraft
                      type: string
                      enum:
                        - belly_freight
                        - cargo
                    aircraft_capacity_tonnes:
                       description: |
                         Full capacity of the aircraft. If the wanted configuration is not known for
                         the aircraft the other configuration will be used.
                       type: object
                       required:
                         - passenger
                         - cargo
                       properties:
                         passenger:
                           type: number
                         cargo:
                           type: number
                    load_factor:
                       description: |
                         Load factor for the provided flight. If the exact flight load factor is not
                         known a global average from IATA will be used.
                       type: object
                       required:
                         - passenger
                         - cargo
                       properties:
                         passenger:
                           type: number
                         cargo:
                           type: number
                    flight_fuel_consumed_tonnes:
                      description: Estimate of the total amount of fuel the flight has consumed in tonnes.
                      type: number
                    distance_adjustment_factor:
                      description: Value of the distance adjustment factor (DAF) as seen on GLEC.
                      type: number
                    emission_share:
                      description: |
                        Fraction (ranging from 0 to 1) of total flight leg emissions for which the shipment is responsible.
                      type: number
    ResolvedShippingLegEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/BaseShippingLegEmissionEstimate'
        - type: object
          required:
            - method
          properties:
            method:
              $ref: '#/components/schemas/ShippingMethod'
    ShippingLegEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/BaseShippingLegEmissionEstimate'
        - type: object
          required:
            - converted_shipment
            - shipment_conversion_method
          properties:
            converted_shipment:
              description: |
                The shipment after conversion to the emission factor unit (mass to/from TEU).

                `null` if no conversion was necessary.
              oneOf:
                - $ref: '#/components/schemas/ConvertedShipment'
                - $ref: '#/components/schemas/NullEnum'
            shipment_conversion_method:
              description: |
                The method we used to convert the shipment to the emission factor unit.

                `null` if no conversion was necessary.
              oneOf:
                - $ref: '#/components/schemas/ShipmentConversionMethod'
                - $ref: '#/components/schemas/NullEnum'
            resolved_legs:
              description: |
                If the input shipping method resulted in multiple legs being detected these
                will be separately calculated and shown here.
              type: array
              items:
                $ref: '#/components/schemas/ResolvedShippingLegEmissionEstimate'
    MultiLegShippingEmissionEstimate:
      description: |
        An emission estimate result for a transport involving multiple legs.

        Lune's API returns both the total emissions and per-leg emissions (in the `legs`
        property).

        The ordering of the legs in the estimate is the same as the ordering of the inputs.

        An error with estimating any of the legs will result in the whole estimation process
        failing completely (we don't provide partial estimates in light of a failure).
      allOf:
        - type: object
          required:
            - is_shipment
            - shipped_at
            - legs
            - distance
            - adjusted_distance
            - request
          properties:
            is_shipment:
              type: boolean
              description: |
                When true, the emission estimate refers to an actual shipment of goods, will be included in Lune analytics and can be included in any CO2 emissions reporting.

                This property exists to distinguish booking quotes or forecasts from actual shipments where goods are moved.

                You can mark an estimate as shipment at any time.
              example: false
            shipped_at:
              $ref: '#/components/schemas/ShippedAt'
            legs:
              type: array
              description: |
                An array representing a leg's emission estimate.

                Returned in the same order as the request.
              items:
                $ref: '#/components/schemas/ShippingLegEmissionEstimate'
            distance:
              $ref: '#/components/schemas/Distance'
            adjusted_distance:
              $ref: '#/components/schemas/AdjustedDistance'
            request:
              $ref: '#/components/schemas/MultiLegShippingEstimateRequest'
        - $ref: '#/components/schemas/EmissionEstimateResponse'
      example:
        id: '08QD7GPaBx5b6Y6mJlWyONXLvrZljRE2'
        is_shipment: false
        shipped_at: '2023-11-20T10:20:30Z'
        mass:
          amount: '1.105698'
          unit: 't'
        quote:
          estimated_quantity: '1.105697'
          estimated_commission: '3.02'
          estimated_total_cost: '30.13'
          estimated_offset_cost: '27.11'
          requested_value: null
          requested_quantity: '1.105698'
          currency: 'USD'
          bundles:
            - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
              bundle_name: 'Conserving forests in Asia'
              quantity: '1.050413'
              unit_price: '12.65'
              gross_unit_price: '14.06'
              offset_cost: '13.29'
              insufficient_available_quantity: null
            - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
              bundle_name: 'Ocean Carbon Removal'
              quantity: '0.055284'
              unit_price: '250'
              gross_unit_price: '277.78'
              offset_cost: '13.82'
              insufficient_available_quantity: null
        distance:
          amount: '22951.682'
          unit: 'km'
        legs:
          - mass:
              amount: '0.018195'
              unit: 't'
            distance:
              amount: '19.09'
              unit: 'km'
            methodology: []
          - mass:
              amount: '0.019576'
              unit: 't'
            distance:
              amount: '267.02'
              unit: 'km'
            methodology: []
          - mass:
              amount: '0.901448'
              unit: 't'
            distance:
              amount: '22350.48'
              unit: 'km'
            methodology: []
          - mass:
              amount: '0.031184'
              unit: 't'
            methodology: []
          - mass:
              amount: '0.135294'
              unit: 't'
            distance:
              amount: '47.2081'
              unit: 'km'
            methodology: []
        request:
          shipment:
            mass:
              amount: '10.36'
              unit: 't'
          legs:
            - route:
                source:
                  lat: 24.211893
                  lon: 120.608696
                destination:
                  locode: TWTXG
              method: 'diesel_truck'
            - route:
                source:
                  locode: TWTXG
                destination:
                  locode: TWTPE
              method:
                vessel_type: 'container_ship'
            - route:
                source:
                  locode: TWTPE
                destination:
                  locode: DEHAM
              method:
                vessel_imo_number: '9893890'
            - method: maritime_container_terminal
            - route:
                source:
                  locode: DEHAM
                destination:
                  street_line1: Märkische Allee 71
                  postcode: '14979'
                  city: Großbeeren
                  country_code: DEU
              method: truck_articulated_34t
    AnyShippingEmissionEstimate:
      oneOf:
        - $ref: '#/components/schemas/SingleShippingEmissionEstimate'
        - $ref: '#/components/schemas/MultiLegShippingEmissionEstimate'
    PaginatedAnyShippingEmissionEstimates:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              description: Paginated single and multi-leg shipping emission estimates
              items:
                $ref: '#/components/schemas/AnyShippingEmissionEstimate'
    CompanyEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/EmissionEstimateResponse'
        - type: object
          required:
            - request
            - components
            - scope1
            - scope2
            - scope3
          properties:
            request:
              $ref: '#/components/schemas/CompanyEstimateRequest'
            scope1:
              description: Scope 1 emissions. Direct emissions from owned or controlled sources.
              $ref: '#/components/schemas/Mass'
            scope2:
              description: Scope 2 emissions. Indirect emissions from the generation of purchased or acquired electricity, steam, heating, or cooling consumed.
              $ref: '#/components/schemas/Mass'
            scope3:
              description: Scope 3 emissions. All indirect emissions, not included in scope 2, that occur in the value chain.
              $ref: '#/components/schemas/Mass'
            components:
              type: object
              required:
                - material_and_waste
                - energy
                - travel_and_commute
                - food_and_drink
                - tech
              properties:
                material_and_waste:
                  description: Emissions associated with buying equipment and generating waste.
                  $ref: '#/components/schemas/Mass'
                energy:
                  description: Emissions associated with purchasing energy (electricy, heating etc.)
                  $ref: '#/components/schemas/Mass'
                travel_and_commute:
                  description: Emissions associated with business travels and commuting to/from work.
                  $ref: '#/components/schemas/Mass'
                food_and_drink:
                  description: Emissions associated with food and drinks.
                  $ref: '#/components/schemas/Mass'
                tech:
                  description: Emissions associated with operating computer systems.
                  $ref: '#/components/schemas/Mass'
                remote_employee:
                  description: Emissions associated with remote employees (electricity, heating etc.)
                  $ref: '#/components/schemas/Mass'
    EstimateIdempotencyKey:
      type: string
      maxLength: 100
      example: 5bd808a954e
      description: |
        Account-unique identifier provided by the client.

        `idempotency_key` has two purposes:
        1. Clients can safely retry estimate requests without accidentally performing the same operation multiple times.
        2. Clients can use `idempotency_key` to reconcile estimates with entities on their system.
    Metadata:
      description: |
          An arbitrary dictionary (key-value pairs) to store application-specific information.

          Lune doesn't use this information for order processing. Its purpose is for the API
          clients to be able to attach arbitrary information (to an order for example) and
          then retrieve it.
      type: object
      additionalProperties:
        type: string
    Money:
      type: string
      pattern: '^[0-9]+(\.[0-9]+)?$'
      description: An amount of money (the fractional part is optional)
      example: '3.14'
    Timestamp:
      type: string
      format: date-time
      description: An <a href="https://pretty-rfc.herokuapp.com/RFC3339">RFC 3339</a>-formatted timestamp.
      example: '1985-04-12T23:20:50.52Z'
    Url:
      type: string
      pattern: '^https:\/\/[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
      description: An HTTPS URL
      example: 'https://lune.co'
    MonetaryAmount:
      type: object
      required:
        - value
        - currency
      properties:
        value:
         $ref: '#/components/schemas/MonetaryAmountValue'
        currency:
          $ref: "#/components/schemas/CurrencyCode"
          example: GBP
    AccountCurrencyCode:
      type: string
      description: |
        The account's currency.

        ISO 4217 3 character currency code.

        Note: Lune does not support all currency codes.
      enum:
        - GBP
        - EUR
        - USD
        - SEK
        - CHF
        - PLN
        - DKK
        - NOK
        - BGN
        - INR
        - SGD
        - AED
        - AUD
        - HUF
        - ISK
        - CZK
        - CAD
      example: "GBP"
    CurrencyCode:
      type: string
      description: |
        ISO 4217 3 character currency code.

        Note: Lune supports most but not all currency codes.
      example: "GBP"
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTC
        - BTN
        - BWP
        - BYN
        - BYR
        - BZD
        - CAD
        - CDF
        - CHF
        - CLF
        - CLP
        - CNY
        - CNH
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRU
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLE
        - SLL
        - SOS
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VES
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XCD
        - XDR
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMK
        - ZMW
        - ZWL
    MonetaryAmountValue:
      type: string
      pattern: ^[0-9]+(\.[0-9]+)?$
      description: An amount of money (the fractional part is optional)
      example: "3.14"
    CreateWebhookRequest:
      type: object
      required:
        - url
      properties:
        url:
          $ref: "#/components/schemas/Url"
        account_ids:
          description: |
            The created webhook will exclusively push events which belong to the given account identifiers.

            Act as a filter: if not set, events belonging to all the organisation's accounts are pushed.
          type: array
          minItems: 1
          items:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
            description: An account's unique identifier
    UpdateWebhookRequest:
      type: object
      required:
        - url
        - enabled
      properties:
        url:
          $ref: "#/components/schemas/Url"
        enabled:
          description: |
            Determines if events should be sent to the webhook or not. Defaults to `true` for newly created
            webhooks. When updating a webhook and the value is not explicitly specified the existing value
            will be used.
          type: boolean
        account_ids:
          description: |
            The updated webhook will exclusively push events which belong to the given account identifiers.

            If not set, the previous account identifiers filter remains unchanged.
          type: array
          minItems: 1
          items:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
            description: An account's unique identifier
    WebhookBase:
      type: object
      required:
        - id
        - url
        - enabled
        - account_type
        - created_at
      properties:
        id:
          description: The webhook's unique identifier
          type: string
          example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
        url:
          $ref: "#/components/schemas/Url"
        enabled:
          description: Determines if events should be sent to the webhook or not.
          type: boolean
        account_type:
          description: |
            For events related to an account, this property refers to the accounts' type.

            A webhook does not mix live and test events.
          $ref: '#/components/schemas/AccountType'
        account_ids:
          description: |
            The webhook will exclusively push events which belong to account identifiers.

            Acts as a filter: if not set, events belonging to all the organisation's accounts are pushed.
          type: array
          items:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
            description: An account's unique identifier
        created_at:
          description: The webhook's creation timestamp.
          $ref: '#/components/schemas/Timestamp'
    Webhook:
      description: |
        You can configure webhook endpoints via the API to be notified about events that occur in your accounts or client accounts.
      allOf:
        - $ref: '#/components/schemas/WebhookBase'
        - type: object
          required:
            - secret
          properties:
            secret:
              description: The last 4 characters of the secret key used to generate the webhook payload HMAC.
              type: string
    WebhookFullSecret:
      allOf:
        - $ref: '#/components/schemas/WebhookBase'
        - type: object
          required:
            - secret
          properties:
            secret:
              description: The secret key used to generate the webhook payload HMAC.
              type: string
    WebhookRequest:
      description: |
        WebhookRequest represents the request that your webhook receiver receives.
      type: object
      required:
        - events
      properties:
        events:
          type: array
          description: An array of WebhookEvent objects.
          items:
            $ref: '#/components/schemas/WebhookEvent'
    WebhookEvent:
      type: object
      required:
        - api_version
        - event_id
        - event_type
        - sequence
        - data
      properties:
        api_version:
          type: string
          example: v1
          description: |
            Version of the API that serialized the event. The only possible value at the moment is `v1`.
        account_id:
          type: string
          example: ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz
          description: The account identifier the event belongs to.
        event_id:
          type: string
          example: va1BER4JZqnzPkYxJgALg0GeQDoXlWO5
          description: The event’s id. The id can be used for idempotency behaviour if stored on the client side.
        event_type:
          type: string
          enum:
            - order.received
            - order.placed
            - order.paid
            - order.retiring
            - order.cancelled
            - order.failed
            - order.completed
            - allocation.new
            - allocation.retired
          description: The event type. The type of event data will depend on the value present here.
        sequence:
          type: string
          example: 2021-09-13 16:21:29.067803
          description: |
            The event’s sequence. This can be compared lexicographically to determine the order of events.

            The details of the format are subject to change without notice as long as the lexicographical
            ordering property remains intact. You can't depend on the values having any particular shape
            (in particular you can't depend on them being valid timestamps).
        data:
          description: Data of the event. On order.* events, this means an Order. On allocation.* events, this mean an allocation.
          oneOf:
            - $ref: '#/components/schemas/OrderEventDetails'
            - $ref: '#/components/schemas/AllocationEventDetails'
    AllocationEventDetails:
      type: object
      required:
        - allocation
      properties:
        allocation:
          description: Snapshot of the allocation at the time of the event
          $ref: '#/components/schemas/OrderAllocation'
        splitFrom:
          description: Original allocation that triggered the split
          $ref: '#/components/schemas/OrderAllocation'
    OrderEventDetails:
      type: object
      required:
        - order
      properties:
        order:
          $ref: '#/components/schemas/Order'
    CreateClientAccountRequest:
      type: object
      required:
        - name
        - currency
      properties:
        name:
          description: The account name.
          type: string
        currency:
          $ref: '#/components/schemas/AccountCurrencyCode'
        beneficiary:
          description: The account beneficiary. Leading and trailing spaces are removed.
          type: string
        handle:
          type: string
          pattern: '^[a-z0-9-_]+$'
          description: |
            `handle` is a client defined URL-friendly string that identifies the account.

            The `handle` is unique per organisation and account type.
      example:
        name: 'ACME'
        beneficiary: 'ACME Inc'
        currency: 'USD'
    CreateAccountRequest:
      type: object
      required:
        - name
        - currency
      properties:
        name:
          description: The account name.
          type: string
        currency:
          description: The account currency.
          $ref: '#/components/schemas/AccountCurrencyCode'
          example: 'GBP'
        beneficiary:
          description: The account beneficiary. Leading and trailing spaces are removed.
          type: string
          minLength: 1
        handle:
          type: string
          pattern: '^[a-z0-9-_]+$'
          description: |
            `handle` is a client defined URL-friendly string that identifies the account.

            The `handle` is unique per organisation and account type.
      example:
        name: 'ACME'
        currency: 'USD'
    PaginatedAccounts:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              description: |
                An array of Account objects

                Part of a paginated response.
              items:
                $ref: '#/components/schemas/Account'
    PaginatedClientAccounts:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              description: |
                An array of Client Account objects

                Part of a paginated response.
              items:
                $ref: '#/components/schemas/ClientAccount'
    AccountPair:
      type: object
      required:
        - live
        - test
      properties:
        live:
          $ref: '#/components/schemas/Account'
        test:
          $ref: '#/components/schemas/Account'
    Account:
      description: |
        An Account represents the entity which performs API operations.

        Each API operation like creating an order or creating an emission estimate is ring-fenced within an Account.
      allOf:
        - $ref: '#/components/schemas/AccountBase'
      type: object
      required:
        - scope
        - sibling_id
      properties:
        scope:
          type: string
          enum:
            - account
        sibling_id:
          type: string
          description: |
            Account id of the paired account.

            A live account points to its sibling test account and vice versa.
          example: 'gGdqQ0AyQJ72NauCCndfaQLNhc6Jfxc1'
      example:
        id: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
        name: 'ACME'
        beneficiary: 'ACME Inc'
        currency: 'USD'
        type: 'live'
        organisation_id: 'VndoQ0PZjGMzvYOZGwqy6kbgN1eOJx9B'
        logo: null
        bundle_portfolio_id: null
    ClientAccount:
      description: |
        Client accounts are designed for clients working with multi-tenancy applications.

        Client accounts are created programmatically. The API key (created in live or test mode) determines whether the Client account is a live or test account.

        Create a Client Account for each of your customers to segregate their API operations.

        Use the special `Lune-Account` header to perform operations against a specific Client Account.
      allOf:
        - $ref: '#/components/schemas/AccountBase'
      type: object
      required:
        - scope
      properties:
        scope:
          type: string
          enum:
            - client_account
      example:
        id: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
        name: 'ACME'
        beneficiary: 'ACME Inc'
        currency: 'USD'
        type: 'live'
        organisation_id: 'VndoQ0PZjGMzvYOZGwqy6kbgN1eOJx9B'
        logo: null
        bundle_portfolio_id: null
    UpdateAccountRequest:
      description: |
        It's only possible to edit the name and beneficiary of an account.

        Not providing the `beneficiary` property will result in clearing the existing value (if present).
      type: object
      required:
        - name
      properties:
        name:
          description: The account name.
          type: string
        beneficiary:
          description: The account beneficiary. Leading and trailing spaces are removed.
          type: string
          minLength: 1
        bundle_portfolio_id:
          description: The bundle portfolio unique identifier.
          type: string
          example: 'jvqkOq7vX2K18HHydar0W23ZGJdc91Pa'
        handle:
          type: string
          pattern: '^[a-z0-9-_]+$'
          description: |
            `handle` is a client defined URL-friendly string that identifies the account.

            The `handle` is unique per organisation and account type.
      example:
        name: 'ACME'
        beneficiary: 'ACME Inc'
    PartialUpdateAccountRequest:
      description: |
        Providing null on a property will result in clearing the existing value (if present).
      type: object
      properties:
        name:
          description: The account name.
          type: string
        beneficiary:
          description: The account beneficiary. Leading and trailing spaces are removed.
          type: string
          minLength: 1
          nullable: true
        bundle_portfolio_id:
          description: The bundle portfolio unique identifier.
          type: string
          example: 'jvqkOq7vX2K18HHydar0W23ZGJdc91Pa'
          nullable: true
        handle:
          type: string
          pattern: '^[a-z0-9-_]+$'
          description: |
            `handle` is a client defined URL-friendly string that identifies the account.

            The `handle` is unique per organisation and account type.
      example:
        name: 'ACME'
        beneficiary: 'ACME Inc'
    SustainabilityPageRequest:
      type: object
      required:
        - status
        - slug
        - title
        - sections
      properties:
        status:
          $ref: '#/components/schemas/SustainabilityPageStatus'
        slug:
          $ref: '#/components/schemas/SustainabilityPageSlug'
        title:
          $ref: '#/components/schemas/SustainabilityPageTitle'
        description:
          oneOf:
            - $ref: '#/components/schemas/SustainabilityPageDescription'
            - $ref: '#/components/schemas/NullEnum'
        custom_description:
          $ref: '#/components/schemas/SustainabilityPageCustomDescription'
        sections:
          $ref: '#/components/schemas/SustainabilityPageSections'
    SustainabilityPage:
      description: |
        A Sustainability Page represents the entity which enables accounts or client accounts to share their impact publicly.

        Upon the first retirement, the Sustainability Page displays certificates with proof of the retired carbon credits and beneficiary.
      type: object
      required:
        - status
        - slug
        - title
        - description
        - custom_description
        - sections
      properties:
        status:
          $ref: '#/components/schemas/SustainabilityPageStatus'
        slug:
          $ref: '#/components/schemas/SustainabilityPageSlug'
        title:
          $ref: '#/components/schemas/SustainabilityPageTitle'
        description:
          oneOf:
            - $ref: '#/components/schemas/SustainabilityPageDescription'
            - $ref: '#/components/schemas/NullEnum'
        custom_description:
          $ref: '#/components/schemas/SustainabilityPageCustomDescription'
          nullable: true
        sections:
          $ref: '#/components/schemas/SustainabilityPageSections'
          nullable: true
    SustainabilityPageStatus:
      type: string
      enum:
        - enabled
        - disabled
      description: The sustainability page status which determines whether it is visible to the public.
      example: 'enabled'
    SustainabilityPageSlug:
      type: string
      description: The sustainability page slug. The slug is used to identify the page publicly and should be unique.
      example: 'acme'
      pattern: '^[a-z0-9.-]+$'
    SustainabilityPageTitle:
      type: string
      description: The sustainability page title stat format.
      enum:
        - by_volume
        - by_price
      example: 'by_volume'
    SustainabilityPageDescription:
      type: string
      x-lune-name: Description
      description: The sustainability page description format consisting of stat equivalents or a custom description.
      enum:
        - by_equivalent
        - by_supported_goals
        - by_custom_description
      example: 'by_equivalent'
    SustainabilityPageCustomDescription:
      type: string
      description: The sustainability page custom description. Only displayed when `description` is set to `by_custom_description`.
      example: 'This is a custom description'
      nullable: true
    SustainabilityPageSections:
      type: array
      description: The sustainability page sections that will be displayed in the page. Only a single instance of each section type is allowed and the order is irrelevant.
      minItems: 0
      maxItems: 3
      items:
        $ref: '#/components/schemas/SustainabilityPageSection'
      example: ['bundles_breakdown', 'certificates']
    SustainabilityPageSection:
      type: string
      description: The sustainability page section name.
      enum:
            - bundles_breakdown
            - certificates
            - unsdg
      example: 'bundles_breakdown'
    PublicSustainabilityPage:
      type: object
      required:
        - title
        - description
        - include_certificates
        - bundles
        - un_sdg
        - logo
        - account_name
      description: The public sustainability summary page for a given account.
      properties:
        title:
          description: The sustainability page title format and info.
          oneOf:
            - type: object
              x-lune-name: By value
              required:
                - format
                - currency
                - value
              properties:
                format:
                  type: string
                  enum:
                    - by_price
                currency:
                  $ref: "#/components/schemas/CurrencyCode"
                  example: 'GBP'
                value:
                  $ref: "#/components/schemas/MonetaryAmountValue"
            - type: object
              x-lune-name: By quantity
              required:
                - format
                - quantity
              properties:
                format:
                  type: string
                  enum:
                    - by_volume
                quantity:
                  type: string
                  description: The total quantity of tCO2 offset by all completed orders.
                  example: '500.667'
                  pattern: '^[0-9]+(\.[0-9]+)?$'
        description:
          nullable: true
          oneOf:
            - type: object
              nullable: true
              x-lune-name: New York to London flights
              required:
                - format
                - flights_nyc_to_london
              properties:
                format:
                  type: string
                  enum:
                      - by_equivalent
                flights_nyc_to_london:
                  type: number
                  description: The number of one-way flights from NYC to London the emissions of which are an equivalent to the CO2 reduction.
                  example: 10
            - type: object
              x-lune-name: UN SDGs and projects
              required:
                - format
                - number_of_un_sdgs
                - number_of_projects
              properties:
                format:
                  type: string
                  enum:
                    - by_supported_goals
                number_of_un_sdgs:
                  type: number
                  description: The number of supported UN Sustainable Development Goals (SDGs).
                  example: 10
                number_of_projects:
                  type: number
                  description: The number of supported carbon offset projects.
                  example: 10
            - type: object
              x-lune-name: Custom description
              required:
                - format
                - custom_description
              properties:
                format:
                  type: string
                  enum:
                    - by_custom_description
                custom_description:
                  type: string
                  description: The custom description of the sustainability page provided in the configuration.
                  example: 'This is a custom description'
                  nullable: true
        logo:
          type: string
          description: The sustainability page logo URL.
          example: 'https://client-assets.lune.co/XheugMiTUHynItnaYSvCF.png'
          nullable: true
        account_name:
          type: string
          description: The name of the account for which the sustainability page is generated.
          example: 'Acme'
        include_certificates:
          type: boolean
          description: Whether to include the certificates section in the sustainability page.
          example: true
        bundles:
          type: array
          nullable: true
          description: The sustainability page bundle percentages and details.
          items:
            type: object
            required:
              - percent_of_total
              - bundle
              - quantity
            properties:
              percent_of_total:
                type: number
                description:  The volume of emissions offset via this bundle as a percentage of all offset emissions.
                example: 25
              quantity:
                type: string
                description: The quantity of tCO2 offset via this bundle.
                example: "667.667"
                pattern: '^[0-9]+(\.[0-9]+)?$'
              bundle:
                type: object
                required:
                  - name
                  - background_colour
                  - primary_image
                  - primary_image_hires
                  - small_thumbnail
                  - description
                  - offset_type
                  - carbon_permanence
                properties:
                  name:
                    type: string
                    description: The bundle's name
                    example: 'Latin America Forestry'
                  background_colour:
                    type: string
                    description: A bundle's background colour in hexadecimal format
                    example: '#AABBCC'
                    nullable: true
                  primary_image:
                    type: string
                    description: A bundle's image URL
                    example: 'https://assets.lune.co/bundles/latin-america-forestry.png'
                    nullable: true
                  primary_image_hires:
                    type: string
                    description: A bundle's high resolution image URL
                    example: 'https://assets.lune.co/bundles/latin-america-hires.jpg'
                    nullable: true
                  small_thumbnail:
                    type: string
                    description: A bundle's small thumbnail image URL
                    example: 'https://assets.lune.co/bundles/latin-america-thumbnail.jpg'
                    nullable: true
                  description:
                    type: string
                    description: The bundle's description
                    example: 'A conglomeration of renewable energy projects around the world'
                    nullable: true
                  offset_type:
                    type: string
                    description: |
                      Offset type classification
                    enum:
                      - emissions_reduction
                      - carbon_removal
                      # We need null to be an explicit enum member here in order for our response validation
                      # middleware to work correctly. This is *in addition to* "nullable: true" below (which is
                      # needed too).
                      - null
                    example: 'emissions_reduction'
                    nullable: true
                  carbon_permanence:
                    $ref: '#/components/schemas/CarbonPermanence'
        un_sdg:
          $ref: '#/components/schemas/SupportedUNSdg'
    Registry:
      type: string
      description: The project's Verification Standard Entity name or equivalent organization.
      example: 'Verra'
      enum:
        - American Carbon Registry
        - Verra
        - Puro.earth
        - Gold Standard
        - Climate Action Reserve
        - Woodland Carbon Code
        - ACCU
        - Carbon Future
        - Isometric
        - Tuv Nord
        - ''
    EstimateQuote:
      oneOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - $ref: '#/components/schemas/OrderQuoteByQuantity'
    Payment:
      description: |
        A Payment represents a payment for orders placed through Lune Pay.

        The Payment entity contains a reference to the order.
      oneOf:
        - $ref: '#/components/schemas/OrderPayment'
      discriminator:
        propertyName: type
        mapping:
          order: '#/components/schemas/OrderPayment'
    OrderPayment:
      type: object
      required:
        - type
        - order
      properties:
        order:
          allOf:
            - $ref: '#/components/schemas/OrderBase'
            - $ref: '#/components/schemas/OrderByQuantityProperties'
        type:
          type: string
          enum:
            - order
    EmptyObject:
      type: object
      additionalProperties: false
    UploadLogoRequest:
      type: object
      required:
        - logo
      properties:
        logo:
          type: string
          format: binary
    UploadLogoResponse:
      type: object
      properties:
        url:
          description: Uploaded account logo URL
          $ref: "#/components/schemas/Url"
    OrderAllocation:
      type: object
      required:
        - id
        - order_id
        - project_id
        - quantity
        - status
        - created_at
      properties:
        id:
          type: string
          description: The allocation's unique identifier
          example: ka1aAQ61sAB8DQ12KggnaKG21EftR4E6
        order_id:
          type: string
          description: The order's unique identifier
          example: xe1BEV2VZqnzPkYxJgALg0GeQDoXlWO3
        project_id:
          type: string
          description: The project's unique identifier
          example: 1vE213P96LbXNap56NAqVoM7knOedQg4
        quantity:
          type: string
          example: '222.667'
          pattern: '^[0-9]+(\.[0-9]+)?$'
        status:
          type: string
          description: Allocation status
          example: new
          enum:
            - new
            - retired
        created_at:
          type: string
          format: date-time
          description: Allocation creation timestamp
    OffsetType:
      description: |
        Offset type classification
      oneOf:
        - $ref: '#/components/schemas/OffsetTypeNonNullable'
        - $ref: '#/components/schemas/NullEnum'
      example: 'emissions_reduction'
    OffsetTypeNonNullable:
      type: string
      description: |
        Offset type classification
      enum:
        - emissions_reduction
        - carbon_removal
      example: 'emissions_reduction'
    SupportedUNSdg:
      type: array
      nullable: true
      description: |
        The list of supported UN Sustainable Development Goals (SDGs).

        The array is sorted by the goal number (the `un_sdg_number` field), ascending.
      items:
        type: object
        required:
          - un_sdg_number
          - occurrences
        properties:
          un_sdg_number:
            type: number
            description: The number which identifies the specific UN SDG.
            example: 1
          occurrences:
            type: number
            description: The total number of projects supporting this UN SDG.
            example: 5
    DistanceUnit:
      type: string
      enum:
        - m
        - km
        - mi
        - nm
      example: 'km'
      description: Distance unit, `km` for kilometers, `mi` for miles and `nm` for nautical miles
    EmissionFactorRegions:
      type: array
      description: |
        An array of regions.
      items:
        type: string
        description: The name of the country or region of the emission factor.
      example:
        - United Kingdom
        - IAI Area, South America
        - Europe
    EmissionFactorSource:
      type: string
      enum:
        - epa
        - exiobase
        - ecoinvent
        - beis
        - lune
        - glec
        - emsa
        - cbam
        - ademe
        - idemat
      example: exiobase
    EmissionFactorLogicalUnit:
      type: string
      enum:
        - currency
        - distance
        - item
        - time
        - area
        - volume
        - energy
        - mass
        - person-time
        - person-distance
        - mass-time
        - mass-distance
        - distance-time
        - area-time
        - room-time
      example: currency
    EmissionFactorDenominatorUnit:
      oneOf:
        - $ref: '#/components/schemas/CurrencyCode'
        - $ref: '#/components/schemas/DistanceUnit'
        - type: string
          x-lune-name: Other units
          enum:
            - item
            - MJ
            - GJ
            - guest*night
            - room*night
            - ha
            - hour
            - seconds
            - kWh
            - 'kWh ICV'
            - 'kWh LHV'
            - 'kWh HHV'
            - 'kWh SCV'
            - toe
            - 'toe ICV'
            - 'toe HHV'
            - 'toe SCV'
            - 'GJ ICV'
            - 'GJ HHV'
            - 'GJ SCV'
            - 'MJ ICV'
            - kg
            - kg*day
            - km*year
            - l
            - Ml
            - ml
            - m*year
            - m2
            - ha*year
            - m2*year
            - m3
            - m3*km
            - t*km
            - person*km
            - person*month
            - vehicle*km
            - meal
            - t
            - fte*working_hour
            - TEU
            - TEU*km
            - p
            - A4_sheets
          example: item
    GasEmissions:
      type: object
      required:
        - co2e
      properties:
        co2e:
          description: Amount of CO₂ equivalent gas. All gas emissions are accounted here.
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '41.501'
        co2:
          description: Amount of CO₂ gas.
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '30.231'
        methane:
          description: Amount of methane gas.
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '2.51'
        nitrous_oxide:
          description: Amount of nitrous oxide gas.
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '4.3'
        other:
          description: Amount of other greenhouse gases.
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '0.93'
    GatedGasEmissions:
      description: |
        Emission factor has not been enabled. You may request access by emailing support@lune.co.
      type: string
      enum:
        - emission_factor_gated
    EmissionFactor:
      description: |
        An emission factors is a coefficient representing the amount of emissions per unit of activity, eg 0.354kgCO₂/USD.

        The `source` property describes what database the emission factor has been ingested from.
      type: object
      required:
        - id
        - name
        - source
        - source_version
        - publication_year
        - numerator_unit
        - denominator_unit
        - created_at
        - region
      properties:
        id:
          description: The emission factor unique identifier
          type: string
          example: 'ljmkOq7vXd238gAE9WALWQ8ZGVD5ExNz'
        name:
          description: The emission factor name
          type: string
          example: 'Steel Pipe'
        source:
          $ref: '#/components/schemas/EmissionFactorSource'
        source_version:
          description: Source version of the emission factor.
          type: string
          example: '1.0'
        publication_year:
          description: Publication year of the emission factor
          type: number
          example: 2021
        numerator_unit:
          description: Numerator unit of the emission factor
          $ref: '#/components/schemas/MassUnit'
        denominator_unit:
          description: Denominator unit of the emission factor
          $ref: '#/components/schemas/EmissionFactorDenominatorUnit'
        created_at:
          description: Date of creation of the emission factor
          type: string
          format: date-time
          example: '2022-09-01T00:00:00.000Z'
        region:
          type: string
          description: The name of the region that the emission factor covers.
    EmissionFactorWithGasEmissions:
      allOf:
        - $ref: '#/components/schemas/EmissionFactor'
        - type: object
          required:
            - gas_emissions
          properties:
            gas_emissions:
              description: |
                Detailed information about the gas emissions.

                This property is always set as of March 2024.
              oneOf:
                - $ref: '#/components/schemas/GasEmissions'
                - $ref: '#/components/schemas/NullEnum'
    PaginatedEmissionFactors:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              description: |
                An array of Emission Factor objects, ordered by best match.

                Part of a paginated response.
              items:
                $ref: '#/components/schemas/EmissionFactor'
    EmissionFactorActivity:
      type: object
      required:
        - value
        - unit
      properties:
        value:
          description: |
            The quantity of the activity being measured.

            For example, if you using the `Basic iron and steel and of ferro-alloys and first products thereof` emission factor to estimate
            the emission of $1000 of steel pipe. Pass `"1000"` as value.
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '15.25'
        unit:
          description: |
            The units of the activity being measured.

            This property must be equal or compatible with the emission factor's denominator.

            For example, if you using the `Basic iron and steel and of ferro-alloys and first products thereof` emission factor, which has an intensity of `0.738411878489 kgCO2e/EUR`
            to estimate the emission of $1000 of steel pipe. Pass `"USD"` as unit.
            Where possible, we apply a conversion factor to the unit.
          allOf:
            - $ref: '#/components/schemas/EmissionFactorDenominatorUnit'
    EmissionFactorEstimateRequest:
      type: object
      required:
       - emission_factor_id
       - activity
      properties:
        emission_factor_id:
          description: The emission factor unique identifier
          type: string
          example: 'ljmkOq7vXd238gAE9WALWQ8ZGVD5ExNz'
        activity:
          description: A measure of the activity being estimated
          $ref: '#/components/schemas/EmissionFactorActivity'
        name:
          description: A name to reference this calculation.
          type: string
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          $ref: '#/components/schemas/QuantityTrunc'
        metadata:
          $ref: '#/components/schemas/Metadata'
        idempotency_key:
          $ref: '#/components/schemas/EstimateIdempotencyKey'
      example:
        emission_factor_id: 'rKqngNM0G65a9p474WYDQ4xdXWBe82JV'
        activity:
          value: '1525.45'
          unit: 'USD'
    EmissionFactorEstimate:
      allOf:
        - $ref: '#/components/schemas/EmissionEstimateResponse'
        - type: object
          required:
            - request
            - emission_factor
          properties:
            request:
              $ref: '#/components/schemas/EmissionFactorEstimateRequest'
            emission_factor:
              $ref: '#/components/schemas/EmissionFactorWithGasEmissions'
      example:
        mass:
          amount: '1.040105'
          unit: 't'
        emission_factor:
          id: 'rKqngNM0G65a9p474WYDQ4xdXWBe82JV'
          name: 'Basic iron and steel and of ferro-alloys and first products thereof'
          region: 'United States of America'
          source: 'exiobase'
          created_at: '2023-05-05T17:42:20.751Z'
          gas_emissions:
            co2e: '0.738411878489'
          numerator_unit: 'kg'
          source_version: '3.8.2'
          denominator_unit: 'EUR'
          publication_year: '2021'
        request:
          activity:
            unit: 'USD'
            value: '1525.45'
          emission_factor_id: 'rKqngNM0G65a9p474WYDQ4xdXWBe82JV'
          metadata: {}
        metadata: {}
        id: 'ljmkOq7vXd238gAE9WALWQ8ZGVD5ExNz'
        quote:
          bundles:
            - bundle_id: 'q9aKx7b6nNXMk3Yv3pD1mlW5Od2eLZE8'
              quantity: '0.988099'
              unit_price: '6.5'
              bundle_name: 'Conserving forests in Asia'
              offset_cost: '6.43'
              gross_unit_price: '7.22'
              insufficient_available_quantity: null
            - bundle_id: 'xWaKJL3okjD46VpJ4yGXnQNZRe1vzP0w'
              quantity: '0.052005'
              unit_price: '250'
              bundle_name: 'Ocean Carbon Removal'
              offset_cost: '13.01'
              gross_unit_price: '277.78'
              insufficient_available_quantity: null
          currency: 'USD'
          requested_value: null
          estimated_quantity: '1.040104'
          requested_quantity: '1.040105'
          estimated_commission: '2.17'
          estimated_total_cost: '21.59'
          estimated_offset_cost: '19.42'
    CalculatedRoute:
      description: |
        A list of locations and distances betwen them.

        At least one leg will always exist.

        The last leg contains the final location (destination) of the route.
      type: object
      required:
        - source
        - legs
      properties:
        source:
          $ref: '#/components/schemas/CalculatedRouteLocation'
        legs:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/CalculatedRouteLeg'
    CalculatedRouteLeg:
      description: |
        A location and a distance from the previous location (or `source`, if this is the
        first leg).

        If this is the last leg then the location is the final location (destination) of
        the route.
      type: object
      required:
        - location
        - distance
        - adjusted_distance
      properties:
        location:
          $ref: '#/components/schemas/CalculatedRouteLocation'
        distance:
          $ref: '#/components/schemas/Distance'
        adjusted_distance:
          $ref: '#/components/schemas/AdjustedDistance'
    CalculatedRouteLocation:
      type: object
      required:
        - label
        - coordinates
      properties:
        label:
          type: string
          nullable: true
        coordinates:
          $ref: '#/components/schemas/GeographicCoordinates'
    TradeLane:
      type: string
      description: |
        Container transport emissions vary per trade lane. When a trade lane is not given we'll
        use an industry-wide average. Providing an `aggregated_*` trade lane group will result in an
        a more accurate estimate. Providing an `disaggregated_*` trade lane will result in the best
        estimate precision.

        The identifiers are kept relatively short for brevity: Mediterranean includes Black Sea and
        South America includes Central America.

        The trade lanes are bidirectional, for example `disaggregated_asia_to_africa` covers both
        Asia to Africa and Africa to Asia.
      enum:
        - aggregated_panama_trade
        - aggregated_transatlantic
        - aggregated_transsuez
        - aggregated_transpacific
        - aggregated_other

        - disaggregated_asia_to_africa
        - disaggregated_asia_to_mediterranean
        - disaggregated_asia_to_middle_east
        - disaggregated_asia_to_north_america_east
        - disaggregated_asia_to_north_america_west
        - disaggregated_asia_to_north_europe
        - disaggregated_asia_to_oceania
        - disaggregated_asia_to_south_america
        - disaggregated_europe_to_africa
        - disaggregated_europe_to_south_america
        - disaggregated_europe_to_middle_east
        - disaggregated_europe_to_oceania
        - disaggregated_mediterranean_to_north_america_east
        - disaggregated_mediterranean_to_north_america_west
        - disaggregated_north_america_to_africa
        - disaggregated_north_america_to_oceania
        - disaggregated_north_america_to_south_america
        - disaggregated_north_america_to_middle_east
        - disaggregated_north_europe_to_north_america_east
        - disaggregated_north_europe_to_north_america_west
        - disaggregated_south_america_to_africa
        - disaggregated_intra_africa
        - disaggregated_intra_north_america
        - disaggregated_intra_south_america
        - disaggregated_se_asia_to_ne_asia
        - disaggregated_intra_ne_asia
        - disaggregated_intra_se_asia
        - disaggregated_north_europe_to_mediterranean
        - disaggregated_intra_mediterranean
        - disaggregated_intra_north_europe
        - disaggregated_intra_middle_east
        - disaggregated_other
    NullEnum:
      # This is a hack. Since SustainabilityPageDescription is an enum we need to also have a
      # null enum member in order for this property to be trully nullable from the point of view
      # of the OpenAPI middleware.
      type: string
      x-lune-name: Null
      enum:
        # We need null to be an explicit enum member here in order for our response validation
        # middleware to work correctly. This is *in addition to* "nullable: true" below (which is
        # needed too).
        - null
      nullable: true
    CarbonPermanence:
      type: string
      description: The bundle's carbon storage permanence.
      enum:
        - long_term
        - short_term
        - no_storage
      example: 'long_term'
    ShippedAt:
      type: string
      format: date-time
      description: |
        The date and time of shipping the goods for the purpose of analytics (it doesn't
        affect emission calculations in any way).

        If a value is provided when creating or updating an estimate we use the value.
        Otherwise defaults to the current time when creating estimates and remains
        unchanged when updating estimates.

        This property must be formatted as RFC 3339, section 5.6 timestamp.

        Examples:
        * 2023-12-01T12:30:30.000Z
        * 2023-12-01T12:30:30Z
        * 2023-12-01T11:30:30+01.00
